{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\MyLoader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormDialog from \"./FormDialog\";\nimport { MenuItem } from \"react-contextmenu\";\nimport _ from \"lodash\";\nimport { FILE, FOLDER } from \"../utills/constants\";\nimport Node from \"./Node\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { getFatherPath } from \"../utills/utills\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; // TODO : understand localStorage, add styles\n\nconst data = {\n  '/root': {\n    path: '/root',\n    type: FOLDER,\n    isRoot: true,\n    isOpen: false,\n    children: ['/root/gal', '/root/ben']\n  },\n  '/root2': {\n    path: '/root2',\n    type: FOLDER,\n    isRoot: true,\n    isOpen: false,\n    children: ['/root2/gal2']\n  },\n  '/root2/gal2': {\n    path: '/root/gal2',\n    type: FOLDER,\n    isRoot: false,\n    isOpen: false,\n    children: []\n  },\n  '/root/gal': {\n    path: '/root/gal',\n    type: FOLDER,\n    isOpen: false,\n    children: ['/root/gal/read.txt']\n  },\n  '/root/ben': {\n    path: '/root/ben',\n    type: FOLDER,\n    isOpen: false,\n    children: []\n  },\n  '/root/gal/read.txt': {\n    path: '/root/gal/read.txt',\n    type: FILE,\n    isOpen: false\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginBottom: theme.spacing(1)\n  }\n}));\nexport function MyLoader(props) {\n  _s();\n\n  const classes = useStyles(); // TODO : fix inital attirbute\n  //const [cateTree, setCateTree] = useState(localStorage.getItem('category_tree') ? localStorage.getItem('category_tree') : initial_cateTree_string);\n\n  const [treeName, setTreeName] = useState(null); //const [all_category_trees, setAllCateTree] = useState(localStorage.getItem('all_category_tree') ? localStorage.getItem('all_category_tree') : false);\n  //const [catetree_required, setCateTreeRequired] = useState(false);\n  //const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const [nodes, setNodes] = useState(data);\n\n  const getRootNodes = () => {\n    return _.map(_.filter(_.values(nodes), node => {\n      return node.isRoot === true;\n    }), node => _.last(node.path.split('/'))); //return values(nodes).filter(node => node.isRoot === true);\n  };\n\n  const [allRoots, setAllRoots] = useState(getRootNodes()); // const fetchWithLoading = async (arg) => {\n  //     await setLoading(true);\n  //     let res = await fetch(arg);\n  //     let formatted = await res.json();\n  //     await setLoading(false);\n  //     return formatted;\n  // }\n  //\n  // useEffect(() => {\n  //     const onEffect = async () => {\n  //         if(faculty !== ''){\n  //             let res = await fetchWithLoading(`${kdam_url}/all_courses_for_faculty?faculty=${faculty}&is_all_courses=${all_courses}`);\n  //             // formatted.push(empty_course_obj); may do it here and not in the backend later\n  //             setCourseList(res);\n  //         }\n  //     }\n  //     onEffect();\n  // }, [treeName]);\n\n  const onAddRoot = (newFile, is_file, is_root) => {\n    if (newFile) {\n      if (newFile in nodes) {\n        alert(`There is already a file with this name in folder,\\n Please insert different name!`);\n        return;\n      }\n\n      let nodes_copy = JSON.parse(JSON.stringify(nodes));\n\n      if (!is_root) {\n        let father_path = getFatherPath(newFile);\n\n        if (father_path == null || nodes[father_path].type === FILE) {\n          return;\n        }\n\n        nodes_copy[father_path].children.push(newFile);\n      }\n\n      nodes_copy[newFile] = is_file ? {\n        path: newFile,\n        type: FILE,\n        isOpen: false\n      } : {\n        path: newFile,\n        type: FOLDER,\n        isOpen: false,\n        children: []\n      };\n\n      if (is_root) {\n        nodes_copy[newFile].isRoot = true;\n      }\n\n      console.log(`Adding ${is_file ? FILE : FOLDER} ${newFile}`);\n      setNodes(nodes_copy);\n    }\n  };\n\n  useEffect(() => {// TODO: just need to render the component again\n  }, [allRoots, treeName]);\n\n  const changedCateTreeOption = name => {\n    setTreeName(name); // gal understand what to do with localStorage\n    //localStorage.removeItem('category_tree');\n    //localStorage.setItem('category_tree', e.target.value);\n  };\n\n  const loadClicked = () => {\n    if (treeName === '' || treeName == null) {\n      //setTreeNameRequired(true);\n      alert('Please choose category tree first, and then click Load!');\n      return;\n    }\n\n    history.push(`${process.env.PUBLIC_URL}/categorytree?tree_id=${treeName}`);\n  };\n\n  const createClicked = (name, type) => {\n    let newRoots = allRoots.slice();\n    newRoots.push(name);\n    setAllRoots(newRoots); // TODO: also need to add it to server json\n\n    onAddRoot(`/${name}`, false, true);\n    changedCateTreeOption(name);\n  };\n\n  let no_roots_bool = allRoots.length > 0;\n\n  const InitialComponent = () => /*#__PURE__*/_jsxDEV(Grid, {\n    align: \"center\",\n    item: true,\n    className: classes.button,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginTop: '10px',\n        marginBottom: '10px',\n        marginLeft: '5px'\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(FormDialog, {\n        text: 'Create',\n        onClickOk: createClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: 'md',\n      children: no_roots_bool ? /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: 'center',\n          direction: 'column',\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                minWidth: 250\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Select category tree\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: treeName,\n                onChange: e => changedCateTreeOption(e.target.value),\n                children: _.map(allRoots, node => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: node,\n                    children: node\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 61\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.button,\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Go to selected category!\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: '10px',\n                  marginBottom: '10px',\n                  marginRight: '5px'\n                },\n                onClick: loadClicked,\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Go!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Create new category tree!\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: '10px',\n                  marginBottom: '10px',\n                  marginLeft: '5px'\n                },\n                variant: \"contained\",\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(FormDialog, {\n                  text: 'Create',\n                  onClickOk: createClicked\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(InitialComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyLoader, \"OUq1XJBgauTksz0ahoLxOARlzpw=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = MyLoader;\nexport default MyLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyLoader\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/MyLoader.js"],"names":["React","useEffect","useState","useHistory","makeStyles","Container","Paper","Grid","FormControl","Select","InputLabel","Button","Tooltip","FormDialog","MenuItem","_","FILE","FOLDER","Node","Typography","getFatherPath","CircularProgress","data","path","type","isRoot","isOpen","children","useStyles","theme","button","marginBottom","spacing","MyLoader","props","classes","treeName","setTreeName","history","nodes","setNodes","getRootNodes","map","filter","values","node","last","split","allRoots","setAllRoots","onAddRoot","newFile","is_file","is_root","alert","nodes_copy","JSON","parse","stringify","father_path","push","console","log","changedCateTreeOption","name","loadClicked","process","env","PUBLIC_URL","createClicked","newRoots","slice","no_roots_bool","length","InitialComponent","marginTop","marginLeft","minWidth","e","target","value","marginRight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormDialog from \"./FormDialog\";\r\nimport { MenuItem } from \"react-contextmenu\";\r\n\r\nimport _ from \"lodash\";\r\nimport {FILE, FOLDER} from \"../utills/constants\";\r\nimport Node from \"./Node\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {getFatherPath} from \"../utills/utills\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// TODO : understand localStorage, add styles\r\nconst data = {\r\n    '/root': {\r\n        path: '/root',\r\n        type: FOLDER,\r\n        isRoot: true,\r\n        isOpen: false,\r\n        children: ['/root/gal', '/root/ben']\r\n    },\r\n    '/root2': {\r\n        path: '/root2',\r\n        type: FOLDER,\r\n        isRoot: true,\r\n        isOpen: false,\r\n        children: ['/root2/gal2']\r\n    },\r\n    '/root2/gal2': {\r\n        path: '/root/gal2',\r\n        type: FOLDER,\r\n        isRoot: false,\r\n        isOpen: false,\r\n        children: []\r\n    },\r\n    '/root/gal': {\r\n        path: '/root/gal',\r\n        type: FOLDER,\r\n        isOpen: false,\r\n        children: ['/root/gal/read.txt']\r\n    },\r\n    '/root/ben': {\r\n        path: '/root/ben',\r\n        type: FOLDER,\r\n        isOpen: false,\r\n        children: []\r\n    },\r\n    '/root/gal/read.txt': {\r\n        path: '/root/gal/read.txt',\r\n        type: FILE,\r\n        isOpen: false,\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button:{\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport function MyLoader(props) {\r\n    const classes = useStyles();\r\n    // TODO : fix inital attirbute\r\n    //const [cateTree, setCateTree] = useState(localStorage.getItem('category_tree') ? localStorage.getItem('category_tree') : initial_cateTree_string);\r\n    const [treeName, setTreeName] = useState(null);\r\n    //const [all_category_trees, setAllCateTree] = useState(localStorage.getItem('all_category_tree') ? localStorage.getItem('all_category_tree') : false);\r\n    //const [catetree_required, setCateTreeRequired] = useState(false);\r\n    //const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n    const [nodes, setNodes] = useState(data);\r\n\r\n    const getRootNodes = () => {\r\n        return _.map(_.filter(_.values(nodes), (node) => { return node.isRoot === true;}),(node) => _.last(node.path.split('/')));\r\n        //return values(nodes).filter(node => node.isRoot === true);\r\n    }\r\n    const [allRoots, setAllRoots] = useState(getRootNodes());\r\n\r\n    // const fetchWithLoading = async (arg) => {\r\n    //     await setLoading(true);\r\n    //     let res = await fetch(arg);\r\n    //     let formatted = await res.json();\r\n    //     await setLoading(false);\r\n    //     return formatted;\r\n    // }\r\n    //\r\n    // useEffect(() => {\r\n    //     const onEffect = async () => {\r\n    //         if(faculty !== ''){\r\n    //             let res = await fetchWithLoading(`${kdam_url}/all_courses_for_faculty?faculty=${faculty}&is_all_courses=${all_courses}`);\r\n    //             // formatted.push(empty_course_obj); may do it here and not in the backend later\r\n    //             setCourseList(res);\r\n    //         }\r\n    //     }\r\n    //     onEffect();\r\n    // }, [treeName]);\r\n\r\n    const onAddRoot = (newFile, is_file, is_root) => {\r\n        if(newFile){\r\n            if (newFile in nodes){\r\n                alert(`There is already a file with this name in folder,\\n Please insert different name!`);\r\n                return;\r\n            }\r\n            let nodes_copy = JSON.parse(JSON.stringify(nodes));\r\n            if(!is_root) {\r\n                let father_path = getFatherPath(newFile);\r\n                if (father_path == null || nodes[father_path].type === FILE) {\r\n                    return;\r\n                }\r\n                nodes_copy[father_path].children.push(newFile);\r\n            }\r\n\r\n            nodes_copy[newFile] = is_file ? {\r\n                path: newFile,\r\n                type: FILE,\r\n                isOpen: false\r\n            } : {\r\n                path: newFile,\r\n                type: FOLDER,\r\n                isOpen: false,\r\n                children: []\r\n            }\r\n            if(is_root){\r\n                nodes_copy[newFile].isRoot = true;\r\n            }\r\n            console.log(`Adding ${is_file ? FILE : FOLDER} ${newFile}`);\r\n            setNodes(nodes_copy);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // TODO: just need to render the component again\r\n    }, [allRoots, treeName])\r\n\r\n    const changedCateTreeOption = (name) => {\r\n        setTreeName(name);\r\n        // gal understand what to do with localStorage\r\n        //localStorage.removeItem('category_tree');\r\n        //localStorage.setItem('category_tree', e.target.value);\r\n    }\r\n    const loadClicked = () => {\r\n        if(treeName === '' || treeName == null){\r\n            //setTreeNameRequired(true);\r\n            alert('Please choose category tree first, and then click Load!');\r\n            return;\r\n        }\r\n        history.push(`${process.env.PUBLIC_URL}/categorytree?tree_id=${treeName}`)\r\n    }\r\n    const createClicked = (name, type) => {\r\n\r\n        let newRoots = allRoots.slice();\r\n        newRoots.push(name);\r\n        setAllRoots(newRoots);\r\n        // TODO: also need to add it to server json\r\n        onAddRoot(`/${name}`, false, true);\r\n        changedCateTreeOption(name);\r\n    }\r\n\r\n    let no_roots_bool = allRoots.length > 0;\r\n    const InitialComponent = () => (\r\n        <Grid align=\"center\" item  className={classes.button}>\r\n            <Button style={{marginTop: '10px', marginBottom: '10px', marginLeft: '5px'}} variant=\"contained\" color=\"primary\">\r\n                <FormDialog text={'Create'} onClickOk={createClicked} />\r\n            </Button>\r\n        </Grid>\r\n    );\r\n    return(\r\n        <div>\r\n            <Container maxWidth={'md'} >\r\n                    { no_roots_bool ? (\r\n                        <Paper elevation={3} >\r\n                            <Grid container alignItems={'center'} direction={'column'}>\r\n                                <Grid item >\r\n                                    <FormControl style={{minWidth: 250}} >\r\n                                        <InputLabel>Select category tree</InputLabel>\r\n                                        <Select\r\n                                            value={treeName}\r\n                                            onChange={(e) => changedCateTreeOption(e.target.value)}>\r\n                                            {\r\n                                                _.map(allRoots, (node) => {\r\n                                                    return (<MenuItem value={node}>{node}</MenuItem>)\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item  className={classes.button}>\r\n                                    <Tooltip title=\"Go to selected category!\">\r\n                                        <Button style={{marginTop: '10px', marginBottom: '10px', marginRight: '5px'}} onClick={loadClicked} variant=\"contained\" color=\"primary\">\r\n                                            Go!\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Create new category tree!\">\r\n                                        <Button style={{marginTop: '10px', marginBottom: '10px', marginLeft: '5px'}} variant=\"contained\" color=\"primary\">\r\n                                            <FormDialog text={'Create'} onClickOk={createClicked} />\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>) :\r\n                        (<InitialComponent/>)\r\n                    }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyLoader;"]},"metadata":{},"sourceType":"module"}