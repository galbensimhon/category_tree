{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\FormDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ContextMenu } from \"react-contextmenu\";\nimport { ADD, ADDFO, DEL, RNAME, ADD_FILE, ADD_FOLDER, RENAME, DELETE } from \"../utills/constants\";\nexport default function FormDialog(props) {\n  _s();\n\n  const {\n    text,\n    setName\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [tempName, setTempName] = useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClickOk = type => {\n    if (tempName == null || !tempName) {\n      alert('Please insert a valid name');\n      setOpen(false);\n      return;\n    }\n\n    let name = tempName.trim();\n\n    if (name === '' || /\\s/.test(name)) {\n      alert('Please insert a name without spaces');\n    } else {\n      setName(name, type);\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClickOpen,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Insert Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: [\"Please enter a name:\", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), \"(name must be without any spaces)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          id: \"name\",\n          fullWidth: true,\n          onChange: e => setTempName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClickOk(text),\n          color: \"primary\",\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormDialog, \"0RwNWcG7eiuBgRGVHyReLKojQ/A=\");\n\n_c = FormDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialog\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/FormDialog.js"],"names":["React","useState","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ContextMenu","ADD","ADDFO","DEL","RNAME","ADD_FILE","ADD_FOLDER","RENAME","DELETE","FormDialog","props","text","setName","open","setOpen","tempName","setTempName","handleClickOpen","handleClose","handleClickOk","type","alert","name","trim","test","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {ContextMenu} from \"react-contextmenu\";\r\nimport {ADD, ADDFO, DEL, RNAME, ADD_FILE, ADD_FOLDER, RENAME, DELETE} from \"../utills/constants\";\r\n\r\nexport default function FormDialog(props) {\r\n    const { text , setName} = props\r\n    const [open, setOpen] = useState(false);\r\n    const [tempName, setTempName] = useState('')\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleClickOk = (type) => {\r\n        if(tempName == null || !tempName){\r\n            alert('Please insert a valid name');\r\n            setOpen(false);\r\n            return;\r\n        }\r\n        let name = tempName.trim();\r\n        if (name === '' || /\\s/.test(name)) {\r\n            alert('Please insert a name without spaces');\r\n        }\r\n        else{\r\n            setName(name, type);\r\n        }\r\n        setOpen(false);\r\n\r\n    };\r\n    return (\r\n        <div>\r\n            <div onClick={handleClickOpen}>{text}</div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Insert Name</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please enter a name:\r\n                        <div></div>\r\n                        (name must be without any spaces)\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        id=\"name\"\r\n                        fullWidth\r\n                        onChange={(e) => setTempName(e.target.value)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => handleClickOk(text)} color=\"primary\">\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}