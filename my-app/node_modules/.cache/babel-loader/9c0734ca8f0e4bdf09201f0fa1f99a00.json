{"ast":null,"code":"import { serverLocalHost } from './utills/constants'; // export const loadTree = async (id) => {\n//     //let res = await fetch(`${localHost}/calculate_tree/tree?tree_id=${id}`);\n//     //return await res.json();\n//     let url = `${serverLocalHost}/calculate_tree/tree?id=${id}`\n//     let res = await fetch(url);\n//     let sean = await res.json();\n//     console.log(sean);\n//     return sean;\n//     // fetch(url).then(response => {\n//     //             if (response.ok) {\n//     //                 response.json().then(json => {\n//     //                     return json;\n//     //                     console.log(json);\n//     //                 });\n//     //             }\n//     // });\n// }\n\nexport const loadData = async () => {\n  let url = `${serverLocalHost}/calculate_tree/load`;\n\n  try {\n    let res = await fetch(url);\n    let sean = await res.json();\n    console.log(sean);\n    return sean;\n  } catch (e) {\n    console.log('some error on load ' + e);\n    return null;\n  } // fetch(url).then(response => {\n  //     if (response.ok) {\n  //         response.json().then(json => {\n  //             console.log(json);\n  //         });\n  //     }\n  // });\n  // let res = await fetch(`${process.env.PUBLIC_URL}/calculate_tree/load`);\n  // return await res.json();\n\n};\nexport const saveData = async data => {\n  try {\n    let url = `${serverLocalHost}/calculate_tree/save`; //let res = await fetch(url, {method: 'PUT', body: data});\n\n    let res = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    console.log('seannnnnnn');\n    console.log('seannnnnnn' + res);\n    let res2 = await res.json();\n    console.log(`seannn wanna print ${res2}`); //return res.json();\n  } catch (e) {\n    console.log(`while try to saving, the error: ${e}`);\n    return {\n      error: 'unexpected error, in frontend!'\n    };\n  } // let res = await fetch(`${process.env.PUBLIC_URL}/calculate_tree/save`, {method: 'PUT', body: data});\n  // return await res.json().body;\n\n}; //\n// method: 'POST',\n//     headers: {\n//     'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n// },\n// body: JSON.stringify({a: 1, b: 'Textual content'})\n// });","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/Api.js"],"names":["serverLocalHost","loadData","url","res","fetch","sean","json","console","log","e","saveData","data","method","headers","body","JSON","stringify","res2","error"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,oBAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAChC,MAAIC,GAAG,GAAI,GAAEF,eAAgB,sBAA7B;;AACA,MAAI;AACA,QAAIG,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;AACA,QAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACH,GALD,CAMA,OAAOI,CAAP,EAAU;AACNF,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAuBC,CAAnC;AACA,WAAO,IAAP;AACH,GAX+B,CAahC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,CAtBM;AAwBP,OAAO,MAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AACpC,MAAI;AACA,QAAIT,GAAG,GAAI,GAAEF,eAAgB,sBAA7B,CADA,CAEA;;AACA,QAAIG,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AACvBU,MAAAA,MAAM,EAAE,KADe;AAEvBC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFc;AAMvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANiB,KAAN,CAArB;AAQAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeL,GAA3B;AAEA,QAAIc,IAAI,GAAG,MAAMd,GAAG,CAACG,IAAJ,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBS,IAAK,EAAvC,EAfA,CAgBA;AACH,GAjBD,CAkBA,OAAOR,CAAP,EAAU;AACNF,IAAAA,OAAO,CAACC,GAAR,CAAa,mCAAkCC,CAAE,EAAjD;AACA,WAAO;AAACS,MAAAA,KAAK,EAAE;AAAR,KAAP;AACH,GAtBmC,CAuBpC;AACA;;AAEH,CA1BM,C,CA2BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {serverLocalHost} from './utills/constants'\r\n\r\n// export const loadTree = async (id) => {\r\n//     //let res = await fetch(`${localHost}/calculate_tree/tree?tree_id=${id}`);\r\n//     //return await res.json();\r\n//     let url = `${serverLocalHost}/calculate_tree/tree?id=${id}`\r\n//     let res = await fetch(url);\r\n//     let sean = await res.json();\r\n//     console.log(sean);\r\n//     return sean;\r\n//     // fetch(url).then(response => {\r\n//     //             if (response.ok) {\r\n//     //                 response.json().then(json => {\r\n//     //                     return json;\r\n//     //                     console.log(json);\r\n//     //                 });\r\n//     //             }\r\n//     // });\r\n// }\r\n\r\nexport const loadData = async () => {\r\n    let url = `${serverLocalHost}/calculate_tree/load`;\r\n    try {\r\n        let res = await fetch(url);\r\n        let sean = await res.json();\r\n        console.log(sean)\r\n        return sean;\r\n    }\r\n    catch (e) {\r\n        console.log('some error on load '+ e)\r\n        return null;\r\n    }\r\n\r\n    // fetch(url).then(response => {\r\n    //     if (response.ok) {\r\n    //         response.json().then(json => {\r\n    //             console.log(json);\r\n    //         });\r\n    //     }\r\n    // });\r\n    // let res = await fetch(`${process.env.PUBLIC_URL}/calculate_tree/load`);\r\n    // return await res.json();\r\n}\r\n\r\nexport const saveData = async (data) => {\r\n    try {\r\n        let url = `${serverLocalHost}/calculate_tree/save`;\r\n        //let res = await fetch(url, {method: 'PUT', body: data});\r\n        let res = await fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n        console.log('seannnnnnn');\r\n        console.log('seannnnnnn' + res);\r\n\r\n        let res2 = await res.json();\r\n        console.log(`seannn wanna print ${res2}`);\r\n        //return res.json();\r\n    }\r\n    catch (e) {\r\n        console.log(`while try to saving, the error: ${e}`);\r\n        return {error: 'unexpected error, in frontend!'}\r\n    }\r\n    // let res = await fetch(`${process.env.PUBLIC_URL}/calculate_tree/save`, {method: 'PUT', body: data});\r\n    // return await res.json().body;\r\n\r\n}\r\n//\r\n// method: 'POST',\r\n//     headers: {\r\n//     'Accept': 'application/json',\r\n//         'Content-Type': 'application/json'\r\n// },\r\n// body: JSON.stringify({a: 1, b: 'Textual content'})\r\n// });"]},"metadata":{},"sourceType":"module"}