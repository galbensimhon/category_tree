{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\TreeContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { renameChild, getFatherPath, getOldNodePath } from '../utills/utills';\nimport { FILE, FOLDER } from \"../utills/constants\";\nimport { useHistory } from 'react-router-dom';\nimport Tree from \"./Tree\";\nimport queryString from 'query-string';\nimport { Button, Container, Typography } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AlertDialog from \"./AlertDialog\";\nimport { Prompt } from 'react-router';\nimport { loadData, saveData } from \"../Api\";\nconst data = {\n  '/root': {\n    path: '/root',\n    type: FOLDER,\n    isRoot: true,\n    isOpen: false,\n    children: ['/root/gal', '/root/ben']\n  },\n  '/root2': {\n    path: '/root2',\n    type: FOLDER,\n    isRoot: true,\n    isOpen: false,\n    children: ['/root2/gal2']\n  },\n  '/root2/gal2': {\n    path: '/root2/gal2',\n    type: FOLDER,\n    isRoot: false,\n    isOpen: false,\n    children: []\n  },\n  '/root/gal': {\n    path: '/root/gal',\n    type: FOLDER,\n    isOpen: false,\n    children: ['/root/gal/read.txt']\n  },\n  '/root/ben': {\n    path: '/root/ben',\n    type: FOLDER,\n    isOpen: false,\n    children: []\n  },\n  '/root/gal/read.txt': {\n    path: '/root/gal/read.txt',\n    type: FILE,\n    isOpen: false\n  }\n}; // should send to tree : setChangeWithoutSaving (in case he change), treeData (the tree which he need to render)\n\nexport function TreeContainer() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [changeWithoutSaving, setChangeWithoutSaving] = useState(false); // TODO: in future will be request api and not data (get all data - getAllData())\n\n  const [allData, setAllData] = useState(loadData());\n  const history = useHistory();\n\n  const getExposedRootName = () => {\n    let parsed = queryString.parse(window.location.search);\n\n    if (!parsed || !parsed.id) {\n      alert('problem with getting category tree..');\n      history.push(`${process.env.PUBLIC_URL}/`);\n      return null;\n    }\n\n    return parsed.id;\n  };\n\n  const [rootName, setRootName] = useState(getExposedRootName());\n\n  const getRootNodes = () => {\n    return _.filter(_.values(allData), node => {\n      return node.isRoot === true;\n    });\n  };\n\n  const newSearchClicked = () => {\n    history.push(`${process.env.PUBLIC_URL}/`);\n  };\n\n  const onSaveClicked = () => {\n    //TODO: should implement\n    saveData(allData);\n    setChangeWithoutSaving(false);\n  };\n\n  const onRename = newName => {\n    if (newName) {\n      let [old_node, name] = getOldNodePath(newName);\n      if (old_node == null || name == null) return; // in case renaming the root\n\n      let new_node = `/${name}`;\n      let nodes_copy = JSON.parse(JSON.stringify(allData));\n\n      if (!nodes_copy[old_node].isRoot) {\n        let father_path = getFatherPath(newName);\n\n        if (father_path == null) {\n          return;\n        }\n\n        new_node = `${father_path}/${name}`;\n\n        if (new_node in allData) {\n          alert(`There is already a file with this name in folder,\\n Please insert different name!`);\n          return;\n        }\n\n        nodes_copy[father_path].children = nodes_copy[father_path].children.filter(item => item !== old_node);\n        nodes_copy[father_path].children.push(new_node);\n      } else {\n        // case renaming root name, and already have another root with the specific name\n        let root_nodes = getRootNodes();\n\n        if (root_nodes.includes(new_node)) {\n          alert(`There is already a different root with this name,\\n Please insert different name!`);\n          return;\n        }\n\n        setRootName(name);\n      }\n\n      renameChild(nodes_copy, old_node, new_node);\n      console.log(`Renaming ${old_node} to ${new_node}`);\n      setAllData(nodes_copy);\n      setChangeWithoutSaving(true);\n    }\n  };\n\n  const onDelete = file => {\n    let nodes_copy = JSON.parse(JSON.stringify(allData));\n    Delete(nodes_copy, file);\n    setAllData(nodes_copy);\n    console.log(`Deleting file ${file}`);\n    setChangeWithoutSaving(true);\n  };\n\n  const Delete = (nodes_copy, file) => {\n    if (file) {\n      if (nodes_copy[file].type === FOLDER) {\n        _.forEach(nodes_copy[file].children, child => {\n          Delete(nodes_copy, child);\n        });\n      }\n\n      if (!nodes_copy[file].isRoot) {\n        let father_path = getFatherPath(file);\n\n        if (father_path == null || allData[father_path].type === FILE) {\n          return;\n        }\n\n        nodes_copy[father_path].children = nodes_copy[father_path].children.filter(item => item !== file);\n      }\n\n      delete nodes_copy[file];\n    }\n  };\n\n  const onAdd = (newFile, is_file) => {\n    if (newFile) {\n      if (newFile in allData) {\n        alert(`There is already a file with this name in folder,\\n Please insert different name!`);\n        return;\n      }\n\n      let nodes_copy = JSON.parse(JSON.stringify(allData));\n      let father_path = getFatherPath(newFile);\n\n      if (father_path == null || allData[father_path].type === FILE) {\n        return;\n      }\n\n      nodes_copy[father_path].children.push(newFile);\n      nodes_copy[newFile] = is_file ? {\n        path: newFile,\n        type: FILE,\n        isOpen: false\n      } : {\n        path: newFile,\n        type: FOLDER,\n        isOpen: false,\n        children: []\n      };\n      console.log(`Adding ${is_file ? FILE : FOLDER} ${newFile}`);\n      setAllData(nodes_copy);\n      setChangeWithoutSaving(true);\n    }\n  };\n\n  useEffect(() => {\n    console.log('gal rightss');\n    window.addEventListener('beforeunload', alertUser);\n    window.addEventListener('unload', handleEnd);\n    return () => {\n      window.removeEventListener('beforeunload', alertUser);\n      window.removeEventListener('unload', handleEnd); //handleEnd();\n    };\n  }, []);\n\n  const alertUser = e => {\n    e.preventDefault();\n    e.returnValue = '';\n  };\n\n  const handleEnd = async () => {\n    await fetch({\n      url: setChangeWithoutSaving(false),\n      method: 'PUT'\n    });\n  };\n\n  const LoadingComponent = () => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    justify: 'center',\n    xs: 12,\n    style: {\n      minHeight: 200\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          justifyItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            marginBottom: '10px'\n          },\n          variant: \"h5\",\n          align: \"center\",\n          color: \"textPrimary\",\n          children: \"Loading tree...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n          style: {\n            margin: 'auto'\n          },\n          color: 'primary'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: changeWithoutSaving,\n      message: () => 'Are u sure to leave page without saving?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: 'sm',\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: 'center',\n        xs: 12,\n        md: 12,\n        spacing: 0,\n        wrap: \"nowrap\",\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Go to select another tree!\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginTop: '10px',\n              marginBottom: '10px',\n              marginRight: '5px'\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            children: changeWithoutSaving ? /*#__PURE__*/_jsxDEV(AlertDialog, {\n              text: 'Change tree',\n              alert_message: 'Leave site?',\n              content: 'Changes you made may not be saved.',\n              handleClickOk: newSearchClicked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: newSearchClicked,\n              children: 'Change tree'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Saving your changes..\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginTop: '10px',\n              marginBottom: '10px',\n              marginLeft: '5px'\n            },\n            onClick: onSaveClicked,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: 'xl',\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          marginBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: 'center',\n          children: loading ? /*#__PURE__*/_jsxDEV(LoadingComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              minHeight: 200,\n              marginTop: '15px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Tree, {\n              nodes: allData,\n              setNodes: setAllData,\n              onRename: onRename,\n              onDelete: onDelete,\n              onAdd: onAdd,\n              onLoading: setLoading,\n              rootName: rootName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TreeContainer, \"WDoBG5COZiJ9Hp9Z3tciUCIK5Jw=\", false, function () {\n  return [useHistory];\n});\n\n_c = TreeContainer;\nexport default TreeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeContainer\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/TreeContainer.js"],"names":["React","useEffect","useState","_","renameChild","getFatherPath","getOldNodePath","FILE","FOLDER","useHistory","Tree","queryString","Button","Container","Typography","Paper","Grid","Tooltip","CircularProgress","AlertDialog","Prompt","loadData","saveData","data","path","type","isRoot","isOpen","children","TreeContainer","loading","setLoading","changeWithoutSaving","setChangeWithoutSaving","allData","setAllData","history","getExposedRootName","parsed","parse","window","location","search","id","alert","push","process","env","PUBLIC_URL","rootName","setRootName","getRootNodes","filter","values","node","newSearchClicked","onSaveClicked","onRename","newName","old_node","name","new_node","nodes_copy","JSON","stringify","father_path","item","root_nodes","includes","console","log","onDelete","file","Delete","forEach","child","onAdd","newFile","is_file","addEventListener","alertUser","handleEnd","removeEventListener","e","preventDefault","returnValue","fetch","url","method","LoadingComponent","minHeight","marginTop","display","flexDirection","justifyContent","justifyItems","marginBottom","margin","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {renameChild, getFatherPath, getOldNodePath} from '../utills/utills'\r\nimport {FILE, FOLDER} from \"../utills/constants\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport Tree from \"./Tree\";\r\nimport queryString from 'query-string'\r\nimport {Button, Container, Typography} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AlertDialog from \"./AlertDialog\";\r\nimport { Prompt }  from 'react-router';\r\nimport {loadData, saveData} from \"../Api\";\r\n\r\nconst data = {\r\n    '/root': {\r\n        path: '/root',\r\n        type: FOLDER,\r\n        isRoot: true,\r\n        isOpen: false,\r\n        children: ['/root/gal', '/root/ben']\r\n    },\r\n    '/root2': {\r\n        path: '/root2',\r\n        type: FOLDER,\r\n        isRoot: true,\r\n        isOpen: false,\r\n        children: ['/root2/gal2']\r\n    },\r\n    '/root2/gal2': {\r\n        path: '/root2/gal2',\r\n        type: FOLDER,\r\n        isRoot: false,\r\n        isOpen: false,\r\n        children: []\r\n    },\r\n    '/root/gal': {\r\n        path: '/root/gal',\r\n        type: FOLDER,\r\n        isOpen: false,\r\n        children: ['/root/gal/read.txt']\r\n    },\r\n    '/root/ben': {\r\n        path: '/root/ben',\r\n        type: FOLDER,\r\n        isOpen: false,\r\n        children: []\r\n    },\r\n    '/root/gal/read.txt': {\r\n        path: '/root/gal/read.txt',\r\n        type: FILE,\r\n        isOpen: false,\r\n    }\r\n}\r\n\r\n// should send to tree : setChangeWithoutSaving (in case he change), treeData (the tree which he need to render)\r\nexport function TreeContainer() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [changeWithoutSaving, setChangeWithoutSaving] = useState(false);\r\n    // TODO: in future will be request api and not data (get all data - getAllData())\r\n    const [allData, setAllData] = useState(loadData());\r\n    const history = useHistory();\r\n\r\n    const getExposedRootName = () => {\r\n        let parsed = queryString.parse(window.location.search);\r\n        if(!parsed || !parsed.id){\r\n            alert('problem with getting category tree..');\r\n            history.push(`${process.env.PUBLIC_URL}/`);\r\n            return null;\r\n        }\r\n        return parsed.id;\r\n    }\r\n    const [rootName, setRootName] = useState(getExposedRootName());\r\n\r\n    const getRootNodes = () => {\r\n        return _.filter(_.values(allData), (node) => { return node.isRoot === true;});\r\n    }\r\n\r\n    const newSearchClicked = () => {\r\n        history.push(`${process.env.PUBLIC_URL}/`);\r\n    }\r\n    const onSaveClicked = () => {\r\n        //TODO: should implement\r\n        saveData(allData)\r\n        setChangeWithoutSaving(false);\r\n    }\r\n\r\n    const onRename = (newName) => {\r\n        if(newName){\r\n            let [old_node, name] = getOldNodePath(newName);\r\n            if(old_node == null || name == null)\r\n                return;\r\n            // in case renaming the root\r\n            let new_node = `/${name}`;\r\n            let nodes_copy = JSON.parse(JSON.stringify(allData));\r\n            if(!nodes_copy[old_node].isRoot){\r\n                let father_path = getFatherPath(newName);\r\n                if(father_path == null){\r\n                    return;\r\n                }\r\n                new_node = `${father_path}/${name}`;\r\n                if (new_node in allData){\r\n                    alert(`There is already a file with this name in folder,\\n Please insert different name!`);\r\n                    return;\r\n                }\r\n                nodes_copy[father_path].children = nodes_copy[father_path].children.filter((item) => item !== old_node)\r\n                nodes_copy[father_path].children.push(new_node);\r\n            }\r\n            else{\r\n                // case renaming root name, and already have another root with the specific name\r\n                let root_nodes = getRootNodes();\r\n                if (root_nodes.includes(new_node)){\r\n                    alert(`There is already a different root with this name,\\n Please insert different name!`);\r\n                    return;\r\n                }\r\n                setRootName(name);\r\n\r\n            }\r\n            renameChild(nodes_copy, old_node, new_node);\r\n            console.log(`Renaming ${old_node} to ${new_node}`);\r\n            setAllData(nodes_copy);\r\n            setChangeWithoutSaving(true);\r\n        }\r\n    };\r\n    const onDelete = (file) => {\r\n        let nodes_copy = JSON.parse(JSON.stringify(allData));\r\n        Delete(nodes_copy, file);\r\n        setAllData(nodes_copy);\r\n        console.log(`Deleting file ${file}`);\r\n        setChangeWithoutSaving(true);\r\n    }\r\n    const Delete = (nodes_copy, file) => {\r\n        if(file){\r\n            if(nodes_copy[file].type === FOLDER){\r\n                _.forEach(nodes_copy[file].children, (child) => {\r\n                    Delete(nodes_copy, child);\r\n                });\r\n            }\r\n            if(!nodes_copy[file].isRoot){\r\n                let father_path = getFatherPath(file);\r\n                if(father_path == null || allData[father_path].type === FILE){\r\n                    return;\r\n                }\r\n                nodes_copy[father_path].children = nodes_copy[father_path].children.filter((item) => item !== file);\r\n            }\r\n            delete nodes_copy[file];\r\n        }\r\n    }\r\n    const onAdd = (newFile, is_file) => {\r\n        if(newFile){\r\n            if (newFile in allData){\r\n                alert(`There is already a file with this name in folder,\\n Please insert different name!`);\r\n                return;\r\n            }\r\n            let nodes_copy = JSON.parse(JSON.stringify(allData));\r\n            let father_path = getFatherPath(newFile);\r\n            if(father_path == null || allData[father_path].type === FILE){\r\n                return;\r\n            }\r\n            nodes_copy[father_path].children.push(newFile);\r\n\r\n            nodes_copy[newFile] = is_file ? {\r\n                path: newFile,\r\n                type: FILE,\r\n                isOpen: false\r\n            } : {\r\n                path: newFile,\r\n                type: FOLDER,\r\n                isOpen: false,\r\n                children: []\r\n            }\r\n            console.log(`Adding ${is_file ? FILE : FOLDER} ${newFile}`);\r\n            setAllData(nodes_copy);\r\n            setChangeWithoutSaving(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('gal rightss');\r\n        window.addEventListener('beforeunload', alertUser);\r\n        window.addEventListener('unload', handleEnd);\r\n        return () => {\r\n            window.removeEventListener('beforeunload', alertUser);\r\n            window.removeEventListener('unload', handleEnd);\r\n            //handleEnd();\r\n        }\r\n    }, [])\r\n    const alertUser = e => {\r\n        e.preventDefault()\r\n        e.returnValue = ''\r\n    }\r\n    const handleEnd = async () => {\r\n        await fetch({\r\n            url: setChangeWithoutSaving(false),\r\n            method: 'PUT'\r\n        })\r\n    }\r\n\r\n    const LoadingComponent = () => (\r\n        <Grid item container  justify={'center'} xs={12} style={{minHeight: 200}} >\r\n            <Grid item xs={12} style={{marginTop: '10px'}}>\r\n                <div style={{display: 'flex', flexDirection:'column', justifyContent: 'center', justifyItems: 'center'}}>\r\n                    <Typography style={{marginBottom: '10px'}} variant=\"h5\" align=\"center\" color=\"textPrimary\" >\r\n                        Loading tree...\r\n                    </Typography>\r\n                    <CircularProgress style={{margin:'auto'}} color={'primary'}/>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n\r\n    return(\r\n        <div>\r\n            <Prompt\r\n                when={changeWithoutSaving}\r\n                message={() => 'Are u sure to leave page without saving?'} />\r\n            <Container maxWidth={'sm'} >\r\n                <Grid item container justify={'center'} xs={12} md={12} spacing={0} wrap={\"nowrap\"}>\r\n                    <Tooltip title=\"Go to select another tree!\">\r\n                        <Button style={{marginTop: '10px', marginBottom: '10px', marginRight: '5px'}} variant=\"contained\" color=\"primary\">\r\n                            {\r\n                                changeWithoutSaving ? (\r\n                                        <AlertDialog text={'Change tree'} alert_message={'Leave site?'} content={'Changes you made may not be saved.'} handleClickOk={newSearchClicked}/>) :\r\n                                    (<div onClick={newSearchClicked}>{'Change tree'}</div>)\r\n                            }\r\n                        </Button>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Saving your changes..\">\r\n                        <Button style={{marginTop: '10px', marginBottom: '10px', marginLeft: '5px'}} onClick={onSaveClicked} variant=\"contained\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Container>\r\n            <Container maxWidth={'xl'}>\r\n                <Paper elevation={3} style={{marginBottom: '10px'}}>\r\n                    <Grid container justify={'center'}>\r\n                        {loading ? <LoadingComponent/> :\r\n                            <Grid item xs={12} style={{minHeight: 200, marginTop: '15px'}}>\r\n                                    <Tree\r\n                                        nodes={allData}\r\n                                        setNodes={setAllData}\r\n                                        onRename={onRename}\r\n                                        onDelete={onDelete}\r\n                                        onAdd={onAdd}\r\n                                        onLoading={setLoading}\r\n                                        rootName={rootName}\r\n                                    />\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TreeContainer;\r\n"]},"metadata":{},"sourceType":"module"}