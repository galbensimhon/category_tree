{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\MyLoader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from '@material-ui/core/Button';\nimport FormDialog from \"./FormDialog\";\nimport _ from \"lodash\";\nimport { FILE, FOLDER } from \"../utills/constants\"; // TODO : understand localStorage, add styles\n\nconst data = {\n  '/root': {\n    path: '/root',\n    type: FOLDER,\n    isRoot: true,\n    isOpen: false,\n    children: ['/root/gal', '/root/ben']\n  },\n  '/root2': {\n    path: '/root2',\n    type: FOLDER,\n    isRoot: true,\n    isOpen: false,\n    children: ['/root2/gal2']\n  },\n  '/root2/gal2': {\n    path: '/root/gal2',\n    type: FOLDER,\n    isRoot: false,\n    isOpen: false,\n    children: []\n  },\n  '/root/gal': {\n    path: '/root/gal',\n    type: FOLDER,\n    isOpen: false,\n    children: ['/root/gal/read.txt']\n  },\n  '/root/ben': {\n    path: '/root/ben',\n    type: FOLDER,\n    isOpen: false,\n    children: []\n  },\n  '/root/gal/read.txt': {\n    path: '/root/gal/read.txt',\n    type: FILE,\n    isOpen: false\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  container: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(4, 0, 3)\n  },\n  headlines: {\n    paddingTop: theme.spacing(1)\n  },\n  formControl: {\n    marginBottom: theme.spacing(1),\n    minWidth: 250\n  },\n  button: {\n    marginBottom: theme.spacing(1)\n  }\n}));\nexport function MyLoader(props) {\n  _s();\n\n  const classes = useStyles();\n  const initial_cateTree_string = 'Please choose specific tree'; //const [cateTree, setCateTree] = useState(localStorage.getItem('category_tree') ? localStorage.getItem('category_tree') : initial_cateTree_string);\n\n  const [cateTree, setCateTree] = useState(initial_cateTree_string); //const [all_category_trees, setAllCateTree] = useState(localStorage.getItem('all_category_tree') ? localStorage.getItem('all_category_tree') : false);\n  //const [catetree_required, setCateTreeRequired] = useState(false);\n  //const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const [nodes, setNodes] = useState(data);\n\n  const getRootNodes = () => {\n    return _.filter(_.values(nodes), node => {\n      return node.isRoot === true;\n    }); //return values(nodes).filter(node => node.isRoot === true);\n  };\n\n  const [allRoots, setAllRoots] = useState(getRootNodes()); // const fetchWithLoading = async (arg) => {\n  //     await setLoading(true);\n  //     let res = await fetch(arg);\n  //     let formatted = await res.json();\n  //     await setLoading(false);\n  //     return formatted;\n  // }\n  //\n  // useEffect(() => {\n  //     const onEffect = async () => {\n  //         if(faculty !== ''){\n  //             let res = await fetchWithLoading(`${kdam_url}/all_courses_for_faculty?faculty=${faculty}&is_all_courses=${all_courses}`);\n  //             // formatted.push(empty_course_obj); may do it here and not in the backend later\n  //             setCourseList(res);\n  //         }\n  //     }\n  //     onEffect();\n  // }, [cateTree]);\n\n  useEffect(() => {// TODO: just need to render the component again\n  }, [allRoots, cateTree]);\n\n  const changedCateTreeOption = e => {\n    setCateTree(e.target.value); // gal understand what to do with localStorage\n    //localStorage.removeItem('category_tree');\n    //localStorage.setItem('category_tree', e.target.value);\n  };\n\n  const loadClicked = () => {\n    if (cateTree === '') {\n      //setCateTreeRequired(true);\n      alert('Please choose category tree first, and then click Load!');\n      return;\n    }\n\n    history.push(`${process.env.PUBLIC_URL}/categorytree?id=${cateTree}`);\n  };\n\n  const createClicked = (name, type) => {\n    let newRoots = allRoots.slice();\n    newRoots.push(name);\n    setAllRoots(newRoots); // TODO: also need to add it to server json\n\n    changedCateTreeOption(name);\n  };\n\n  let disabled_bool =\n  /*loading === true || */\n  allRoots.length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container\n    /*maxWidth={'md'}*/\n    , {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: 'center',\n          direction: 'column',\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl\n            /*error={catetree_required}*/\n            , {\n              disabled: disabled_bool,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Select category tree\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: cateTree,\n                onChange: changedCateTreeOption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              title: 'Load the chosen category tree option',\n              onClick: loadClicked,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Load\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              title: 'Create new category tree',\n              variant: \"contained\",\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(FormDialog, {\n                text: 'Create',\n                onClickOk: createClicked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyLoader, \"UGNc11LsgU1BcaIsJQpWJHHKcDQ=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = MyLoader;\nexport default MyLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyLoader\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/MyLoader.js"],"names":["React","useEffect","useState","useHistory","makeStyles","Container","Paper","Grid","FormControl","Select","InputLabel","Button","FormDialog","_","FILE","FOLDER","data","path","type","isRoot","isOpen","children","useStyles","theme","container","backgroundColor","palette","background","default","padding","spacing","headlines","paddingTop","formControl","marginBottom","minWidth","button","MyLoader","props","classes","initial_cateTree_string","cateTree","setCateTree","history","nodes","setNodes","getRootNodes","filter","values","node","allRoots","setAllRoots","changedCateTreeOption","e","target","value","loadClicked","alert","push","process","env","PUBLIC_URL","createClicked","name","newRoots","slice","disabled_bool","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from '@material-ui/core/Button';\r\nimport FormDialog from \"./FormDialog\";\r\nimport _ from \"lodash\";\r\nimport {FILE, FOLDER} from \"../utills/constants\";\r\n\r\n// TODO : understand localStorage, add styles\r\nconst data = {\r\n    '/root': {\r\n        path: '/root',\r\n        type: FOLDER,\r\n        isRoot: true,\r\n        isOpen: false,\r\n        children: ['/root/gal', '/root/ben']\r\n    },\r\n    '/root2': {\r\n        path: '/root2',\r\n        type: FOLDER,\r\n        isRoot: true,\r\n        isOpen: false,\r\n        children: ['/root2/gal2']\r\n    },\r\n    '/root2/gal2': {\r\n        path: '/root/gal2',\r\n        type: FOLDER,\r\n        isRoot: false,\r\n        isOpen: false,\r\n        children: []\r\n    },\r\n    '/root/gal': {\r\n        path: '/root/gal',\r\n        type: FOLDER,\r\n        isOpen: false,\r\n        children: ['/root/gal/read.txt']\r\n    },\r\n    '/root/ben': {\r\n        path: '/root/ben',\r\n        type: FOLDER,\r\n        isOpen: false,\r\n        children: []\r\n    },\r\n    '/root/gal/read.txt': {\r\n        path: '/root/gal/read.txt',\r\n        type: FILE,\r\n        isOpen: false,\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(4, 0, 3),\r\n    },\r\n    headlines: {\r\n        paddingTop: theme.spacing(1)\r\n    },\r\n    formControl: {\r\n        marginBottom: theme.spacing(1),\r\n        minWidth: 250,\r\n    },\r\n    button:{\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport function MyLoader(props) {\r\n    const classes = useStyles();\r\n    const initial_cateTree_string = 'Please choose specific tree';\r\n    //const [cateTree, setCateTree] = useState(localStorage.getItem('category_tree') ? localStorage.getItem('category_tree') : initial_cateTree_string);\r\n    const [cateTree, setCateTree] = useState(initial_cateTree_string);\r\n    //const [all_category_trees, setAllCateTree] = useState(localStorage.getItem('all_category_tree') ? localStorage.getItem('all_category_tree') : false);\r\n    //const [catetree_required, setCateTreeRequired] = useState(false);\r\n    //const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n    const [nodes, setNodes] = useState(data);\r\n\r\n    const getRootNodes = () => {\r\n        return _.filter(_.values(nodes), (node) => { return node.isRoot === true;});\r\n        //return values(nodes).filter(node => node.isRoot === true);\r\n    }\r\n    const [allRoots, setAllRoots] = useState(getRootNodes());\r\n\r\n    // const fetchWithLoading = async (arg) => {\r\n    //     await setLoading(true);\r\n    //     let res = await fetch(arg);\r\n    //     let formatted = await res.json();\r\n    //     await setLoading(false);\r\n    //     return formatted;\r\n    // }\r\n    //\r\n    // useEffect(() => {\r\n    //     const onEffect = async () => {\r\n    //         if(faculty !== ''){\r\n    //             let res = await fetchWithLoading(`${kdam_url}/all_courses_for_faculty?faculty=${faculty}&is_all_courses=${all_courses}`);\r\n    //             // formatted.push(empty_course_obj); may do it here and not in the backend later\r\n    //             setCourseList(res);\r\n    //         }\r\n    //     }\r\n    //     onEffect();\r\n    // }, [cateTree]);\r\n\r\n    useEffect(() => {\r\n        // TODO: just need to render the component again\r\n    }, [allRoots, cateTree])\r\n\r\n    const changedCateTreeOption = (e) => {\r\n        setCateTree(e.target.value);\r\n        // gal understand what to do with localStorage\r\n        //localStorage.removeItem('category_tree');\r\n        //localStorage.setItem('category_tree', e.target.value);\r\n    }\r\n\r\n    const loadClicked = () => {\r\n        if(cateTree === ''){\r\n            //setCateTreeRequired(true);\r\n            alert('Please choose category tree first, and then click Load!');\r\n            return;\r\n        }\r\n        history.push(`${process.env.PUBLIC_URL}/categorytree?id=${cateTree}`)\r\n    }\r\n\r\n    const createClicked = (name, type) => {\r\n        let newRoots = allRoots.slice();\r\n        newRoots.push(name);\r\n        setAllRoots(newRoots);\r\n        // TODO: also need to add it to server json\r\n        changedCateTreeOption(name);\r\n    }\r\n\r\n    let disabled_bool = /*loading === true || */allRoots.length === 0;\r\n\r\n    return(\r\n        <div>\r\n            <Container /*maxWidth={'md'}*/ className={classes.container}>\r\n                <Paper elevation={3} >\r\n                    <Grid container alignItems={'center'} direction={'column'}>\r\n                        <Grid item>\r\n                            <FormControl /*error={catetree_required}*/ disabled={disabled_bool}>\r\n                                <InputLabel>Select category tree</InputLabel>\r\n                                <Select\r\n                                    value={cateTree}\r\n                                    onChange={changedCateTreeOption}>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button title={'Load the chosen category tree option'} onClick={loadClicked} variant=\"contained\" color=\"primary\">\r\n                                Load\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button title={'Create new category tree'} variant=\"contained\" color=\"primary\">\r\n                                <FormDialog text={'Create'} onClickOk={createClicked} />\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyLoader;"]},"metadata":{},"sourceType":"module"}