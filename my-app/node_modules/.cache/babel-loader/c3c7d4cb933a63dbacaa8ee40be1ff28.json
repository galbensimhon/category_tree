{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\CateTree.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport values from 'lodash/values';\nimport Node from \"./Node.js\";\nconst data = {\n  '/root': {\n    path: '/root',\n    type: 'folder',\n    isRoot: true,\n    isOpen: false,\n    children: ['/root/gal', '/root/ben']\n  },\n  '/root/gal': {\n    path: '/root/gal',\n    type: 'folder',\n    isOpen: false,\n    children: ['/root/gal/read.txt']\n  },\n  '/root/ben': {\n    path: '/root/ben',\n    type: 'folder',\n    isOpen: false,\n    children: []\n  },\n  '/root/gal/read.txt': {\n    path: '/root/gal/read.txt',\n    type: 'file',\n    isOpen: false,\n    content: 'some test'\n  }\n}; // TODO: should implement this functions\n// change node, and also his father (children), can get by short the path by 1\n\nfunction getItemsContextMenu() {\n  const onClickAddFile = (node, name) => {\n    // add new node by name, also change father childrens\n    console.log('add file');\n  };\n\n  const onClickAddFolder = (node, name) => {\n    // add new node by name, also change father childrens\n    console.log('add directory');\n  };\n\n  const onClickDeleteFolder = node => {\n    // delete node by name, also change father childrens\n    console.log('delete directory');\n  };\n\n  const onClickDeleteFile = node => {\n    // delete node by name, also change father childrens\n    console.log('delete file');\n  };\n\n  const onClickRename = (node, name) => {\n    // change path of node, also change father childrens\n    console.log('rename file/Folder');\n  };\n\n  const onClickCancel = (node, name) => {\n    // change path of node, also change father childrens\n    console.log('rename file/Folder');\n  };\n\n  return [{\n    text: 'Add file',\n    type: 'folder',\n    needNameInput: true,\n    itemClick: (node, name) => {\n      onClickAddFile(node, name);\n    }\n  }, {\n    text: 'Add Folder',\n    type: 'folder',\n    needNameInput: true,\n    itemClick: (node, name) => {\n      onClickAddFolder(node, name);\n    }\n  }, {\n    text: 'Delete',\n    type: 'both',\n    itemClick: node => {\n      node.type === 'folder' ? onClickDeleteFolder(node) : onClickDeleteFile(node);\n    }\n  }, {\n    text: 'Rename',\n    type: 'both',\n    needNameInput: true,\n    itemClick: (node, name) => {\n      onClickRename(node, name);\n    }\n  }, {\n    text: 'Cancel',\n    type: 'both',\n    itemClick: () => {//onClickCancel();\n    }\n  }];\n}\n\nexport function CateTree(props) {\n  _s();\n\n  //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\n  const [nodes, setNodes] = useState(data);\n  const [fileToAdd, setFileToAdd] = useState(null);\n  const [fileToDelete, setFileToDelete] = useState(null);\n  const items = getItemsContextMenu();\n  const setters = {\n    \"add\": setFileToAdd,\n    \"delete\": setFileToDelete\n  };\n  useEffect(() => {\n    if (fileToAdd) {\n      let old_nodes = JSON.parse(JSON.stringify(nodes));\n      old_nodes[fileToAdd] = {\n        path: fileToAdd\n      };\n      console.log(`Adding file ${fileToAdd}`);\n    }\n  }, [fileToAdd]);\n  useEffect(() => {\n    if (fileToDelete) {\n      console.log(`Deleting file ${fileToDelete}`);\n      let old_nodes = JSON.parse(JSON.stringify(nodes));\n      delete old_nodes[fileToDelete];\n      setNodes(old_nodes);\n    }\n  }, [fileToDelete]);\n\n  const getRootNodes = () => {\n    return values(nodes).filter(node => node.isRoot === true);\n  };\n\n  const onToggle = node => {\n    let nodes_copy = JSON.parse(JSON.stringify(nodes));\n    nodes_copy[node.path].isOpen = !node.isOpen; //console.log(nodes_copy);\n\n    setNodes(nodes_copy);\n  };\n\n  const getChildNodes = node => {\n    return node.children ? node.children.map(path => nodes[path]) : [];\n  };\n\n  const root = getRootNodes(); //console.log(root);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: root.map(node => /*#__PURE__*/_jsxDEV(Node, {\n      node: node,\n      getChildren: getChildNodes,\n      level: 1,\n      onToggle: onToggle,\n      menuItems: items,\n      setters: setters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 37\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CateTree, \"/rUisNDe/XIHrmo75nXXvvr++24=\");\n\n_c = CateTree;\nexport default CateTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"CateTree\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/CateTree.js"],"names":["React","Component","useEffect","useState","values","Node","data","path","type","isRoot","isOpen","children","content","getItemsContextMenu","onClickAddFile","node","name","console","log","onClickAddFolder","onClickDeleteFolder","onClickDeleteFile","onClickRename","onClickCancel","text","needNameInput","itemClick","CateTree","props","nodes","setNodes","fileToAdd","setFileToAdd","fileToDelete","setFileToDelete","items","setters","old_nodes","JSON","parse","stringify","getRootNodes","filter","onToggle","nodes_copy","getChildNodes","map","root"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\r\nimport values from 'lodash/values';\r\nimport Node from \"./Node.js\";\r\n\r\nconst data = {\r\n    '/root': {\r\n        path: '/root',\r\n        type: 'folder',\r\n        isRoot: true,\r\n        isOpen: false,\r\n        children: ['/root/gal', '/root/ben']\r\n    },\r\n    '/root/gal': {\r\n        path: '/root/gal',\r\n        type: 'folder',\r\n        isOpen: false,\r\n        children: ['/root/gal/read.txt']\r\n    },\r\n    '/root/ben': {\r\n        path: '/root/ben',\r\n        type: 'folder',\r\n        isOpen: false,\r\n        children: []\r\n    },\r\n    '/root/gal/read.txt': {\r\n        path: '/root/gal/read.txt',\r\n        type: 'file',\r\n        isOpen: false,\r\n        content: 'some test'\r\n    }\r\n}\r\n\r\n\r\n\r\n// TODO: should implement this functions\r\n// change node, and also his father (children), can get by short the path by 1\r\nfunction getItemsContextMenu(){\r\n\r\n    const onClickAddFile = (node, name) => {\r\n        // add new node by name, also change father childrens\r\n        console.log('add file')\r\n    };\r\n    const onClickAddFolder = (node, name) => {\r\n        // add new node by name, also change father childrens\r\n        console.log('add directory')\r\n\r\n    };\r\n    const onClickDeleteFolder= (node) => {\r\n        // delete node by name, also change father childrens\r\n        console.log('delete directory')\r\n\r\n    };\r\n    const onClickDeleteFile = (node) => {\r\n        // delete node by name, also change father childrens\r\n        console.log('delete file')\r\n\r\n    };\r\n    const onClickRename = (node, name) => {\r\n        // change path of node, also change father childrens\r\n        console.log('rename file/Folder')\r\n\r\n    };\r\n    const onClickCancel = (node, name) => {\r\n        // change path of node, also change father childrens\r\n        console.log('rename file/Folder')\r\n\r\n    };\r\n\r\n    return [\r\n        {\r\n            text: 'Add file',\r\n            type: 'folder',\r\n            needNameInput: true,\r\n            itemClick: (node, name) => {\r\n                onClickAddFile(node, name);\r\n            }\r\n        },\r\n        {\r\n            text: 'Add Folder',\r\n            type: 'folder',\r\n            needNameInput: true,\r\n            itemClick: (node, name) => {\r\n                onClickAddFolder(node, name);\r\n            }\r\n        },\r\n        {\r\n            text: 'Delete',\r\n            type: 'both',\r\n            itemClick: (node) => {\r\n                node.type === 'folder' ? onClickDeleteFolder(node) : onClickDeleteFile(node);\r\n            }\r\n        },\r\n        {\r\n            text: 'Rename',\r\n            type: 'both',\r\n            needNameInput: true,\r\n            itemClick: (node, name) => {\r\n                onClickRename(node, name);\r\n            }\r\n        },\r\n        {\r\n            text: 'Cancel',\r\n            type: 'both',\r\n            itemClick: () => {\r\n                //onClickCancel();\r\n            }\r\n        }\r\n    ];\r\n}\r\n\r\nexport function CateTree(props) {\r\n    //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\r\n    const [nodes, setNodes] = useState(data);\r\n    const [fileToAdd, setFileToAdd] = useState(null);\r\n    const [fileToDelete, setFileToDelete] = useState(null);\r\n    const items = getItemsContextMenu();\r\n\r\n    const setters = {\"add\" : setFileToAdd, \"delete\" : setFileToDelete}\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(fileToAdd){\r\n            let old_nodes = JSON.parse(JSON.stringify(nodes));\r\n            old_nodes[fileToAdd] = {path: fileToAdd, }\r\n            console.log(`Adding file ${fileToAdd}`);\r\n        }\r\n    }, [fileToAdd])\r\n\r\n    useEffect(() => {\r\n        if(fileToDelete){\r\n            console.log(`Deleting file ${fileToDelete}`);\r\n            let old_nodes = JSON.parse(JSON.stringify(nodes));\r\n            delete old_nodes[fileToDelete];\r\n            setNodes(old_nodes);\r\n        }\r\n    }, [fileToDelete])\r\n\r\n    const getRootNodes = () => {\r\n        return values(nodes).filter(node => node.isRoot === true);\r\n    }\r\n\r\n    const onToggle = (node) => {\r\n        let nodes_copy = JSON.parse(JSON.stringify(nodes));\r\n        nodes_copy[node.path].isOpen = !node.isOpen;\r\n        //console.log(nodes_copy);\r\n        setNodes(nodes_copy);\r\n    }\r\n\r\n    const getChildNodes = (node) => {\r\n        return node.children ? node.children.map(path => nodes[path]) : [];\r\n    }\r\n\r\n    const root = getRootNodes();\r\n\r\n    //console.log(root);\r\n    return(\r\n        <div>\r\n            {\r\n                root.map((node) => (<Node node={node} getChildren={getChildNodes} level={1} onToggle={onToggle}\r\n                                        menuItems={items} setters={setters}/>))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CateTree;"]},"metadata":{},"sourceType":"module"}