{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\MyLoader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nimport Paper from '@material-ui/core/Paper';\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormDialog from \"./FormDialog\";\nimport { MenuItem } from \"react-contextmenu\";\nimport { saveData, loadData } from '../Api';\nimport _ from \"lodash\";\nimport { FILE, FOLDER } from \"../utills/constants\";\nimport { getFatherPath } from \"../utills/utills\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginBottom: theme.spacing(1)\n  }\n}));\nexport function MyLoader() {\n  _s();\n\n  const classes = useStyles();\n  const [treeName, setTreeName] = useState(null);\n  const history = useHistory();\n  const [nodes, setNodes] = useState({});\n\n  const getRootNodes = nodes => {\n    return _.map(_.filter(_.values(nodes), node => {\n      return node.isRoot === true;\n    }), node => _.last(node.path.split('/')));\n  };\n\n  const [allRoots, setAllRoots] = useState({});\n\n  const onAddRoot = (newFile, is_file, is_root) => {\n    if (newFile) {\n      if ((nodes != null || nodes) && newFile in nodes) {\n        alert(`There is already a file with this name in folder,\\n Please insert different name!`);\n        return;\n      }\n\n      let nodes_copy = JSON.parse(JSON.stringify(nodes)) || {};\n\n      if (!is_root) {\n        let father_path = getFatherPath(newFile);\n\n        if (father_path == null || nodes[father_path].type === FILE) {\n          return;\n        }\n\n        nodes_copy[father_path].children.push(newFile);\n      }\n\n      nodes_copy[newFile] = is_file ? {\n        path: newFile,\n        type: FILE,\n        isOpen: false\n      } : {\n        path: newFile,\n        type: FOLDER,\n        isOpen: false,\n        children: []\n      };\n\n      if (is_root) {\n        nodes_copy[newFile].isRoot = true;\n      }\n\n      console.log(`Adding ${is_file ? FILE : FOLDER} ${newFile}`);\n      saveData(nodes_copy);\n      setNodes(nodes_copy);\n    }\n  };\n\n  useEffect(() => {}, [allRoots, treeName]);\n  useEffect(() => {\n    const onRender = async () => {\n      let res = await loadData();\n      setNodes(res);\n      setAllRoots(getRootNodes(res));\n    };\n\n    onRender();\n  }, []);\n\n  const changedCateTreeOption = name => {\n    setTreeName(name);\n  };\n\n  const loadClicked = () => {\n    if (treeName === '' || treeName == null) {\n      alert('Please choose category tree first, and then click Load!');\n      return;\n    }\n\n    history.push(`${process.env.PUBLIC_URL}/categorytree/tree?id=${treeName}`);\n  };\n\n  const createClicked = (name, type) => {\n    let newRoots = allRoots.slice();\n    newRoots.push(name);\n    setAllRoots(newRoots);\n    onAddRoot(`/${name}`, false, true);\n    changedCateTreeOption(name);\n  };\n\n  let no_roots_bool = allRoots.length > 0;\n\n  const InitialComponent = () => /*#__PURE__*/_jsxDEV(Grid, {\n    align: \"center\",\n    item: true,\n    className: classes.button,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginTop: '10px',\n        marginBottom: '10px',\n        marginLeft: '5px'\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(FormDialog, {\n        text: 'Create',\n        onClickOk: createClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: 'md',\n      children: no_roots_bool ? /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: 'center',\n          direction: 'column',\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                minWidth: 250\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Select category tree\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: treeName,\n                onChange: e => changedCateTreeOption(e.target.value),\n                children: _.map(allRoots, node => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: node,\n                    children: node\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 61\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.button,\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Go to selected category!\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: '10px',\n                  marginBottom: '10px',\n                  marginRight: '5px'\n                },\n                onClick: loadClicked,\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Go!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Create new category tree!\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: '10px',\n                  marginBottom: '10px',\n                  marginLeft: '5px'\n                },\n                variant: \"contained\",\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(FormDialog, {\n                  text: 'Create',\n                  onClickOk: createClicked\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(InitialComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyLoader, \"xf06Wc5ZdnRNoDokBmptahp1wSs=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = MyLoader;\nexport default MyLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyLoader\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/MyLoader.js"],"names":["React","useEffect","useState","useHistory","makeStyles","Container","Paper","Grid","FormControl","Select","InputLabel","Button","Tooltip","FormDialog","MenuItem","saveData","loadData","_","FILE","FOLDER","getFatherPath","useStyles","theme","button","marginBottom","spacing","MyLoader","classes","treeName","setTreeName","history","nodes","setNodes","getRootNodes","map","filter","values","node","isRoot","last","path","split","allRoots","setAllRoots","onAddRoot","newFile","is_file","is_root","alert","nodes_copy","JSON","parse","stringify","father_path","type","children","push","isOpen","console","log","onRender","res","changedCateTreeOption","name","loadClicked","process","env","PUBLIC_URL","createClicked","newRoots","slice","no_roots_bool","length","InitialComponent","marginTop","marginLeft","minWidth","e","target","value","marginRight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormDialog from \"./FormDialog\";\r\nimport { MenuItem } from \"react-contextmenu\";\r\nimport { saveData, loadData } from '../Api'\r\nimport _ from \"lodash\";\r\nimport {FILE, FOLDER} from \"../utills/constants\";\r\nimport {getFatherPath} from \"../utills/utills\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button:{\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport function MyLoader() {\r\n    const classes = useStyles();\r\n    const [treeName, setTreeName] = useState(null);\r\n    const history = useHistory();\r\n    const [nodes, setNodes] = useState({});\r\n\r\n    const getRootNodes = (nodes) => {\r\n        return _.map(_.filter(_.values(nodes), (node) => { return node.isRoot === true;}),(node) => _.last(node.path.split('/')));\r\n    }\r\n    const [allRoots, setAllRoots] = useState({});\r\n\r\n    const onAddRoot = (newFile, is_file, is_root) => {\r\n        if(newFile){\r\n            if ((nodes != null || nodes) && newFile in nodes){\r\n                alert(`There is already a file with this name in folder,\\n Please insert different name!`);\r\n                return;\r\n            }\r\n            let nodes_copy = JSON.parse(JSON.stringify(nodes)) || {};\r\n            if(!is_root) {\r\n                let father_path = getFatherPath(newFile);\r\n                if (father_path == null || nodes[father_path].type === FILE) {\r\n                    return;\r\n                }\r\n                nodes_copy[father_path].children.push(newFile);\r\n            }\r\n\r\n            nodes_copy[newFile] = is_file ? {\r\n                path: newFile,\r\n                type: FILE,\r\n                isOpen: false\r\n            } : {\r\n                path: newFile,\r\n                type: FOLDER,\r\n                isOpen: false,\r\n                children: []\r\n            }\r\n            if(is_root){\r\n                nodes_copy[newFile].isRoot = true;\r\n            }\r\n            console.log(`Adding ${is_file ? FILE : FOLDER} ${newFile}`);\r\n            saveData(nodes_copy);\r\n            setNodes(nodes_copy);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n    }, [allRoots, treeName])\r\n\r\n    useEffect(() => {\r\n        const onRender = async () => {\r\n            let res = await loadData();\r\n            setNodes(res);\r\n            setAllRoots(getRootNodes(res));\r\n        }\r\n        onRender();\r\n    }, [])\r\n    const changedCateTreeOption = (name) => {\r\n        setTreeName(name);\r\n    }\r\n    const loadClicked = () => {\r\n        if(treeName === '' || treeName == null){\r\n            alert('Please choose category tree first, and then click Load!');\r\n            return;\r\n        }\r\n        history.push(`${process.env.PUBLIC_URL}/categorytree/tree?id=${treeName}`)\r\n    }\r\n    const createClicked = (name, type) => {\r\n\r\n        let newRoots = allRoots.slice();\r\n        newRoots.push(name);\r\n        setAllRoots(newRoots);\r\n        onAddRoot(`/${name}`, false, true);\r\n        changedCateTreeOption(name);\r\n    }\r\n\r\n    let no_roots_bool = allRoots.length > 0;\r\n    const InitialComponent = () => (\r\n        <Grid align=\"center\" item  className={classes.button}>\r\n            <Button style={{marginTop: '10px', marginBottom: '10px', marginLeft: '5px'}} variant=\"contained\" color=\"primary\">\r\n                <FormDialog text={'Create'} onClickOk={createClicked} />\r\n            </Button>\r\n        </Grid>\r\n    );\r\n    return(\r\n        <div>\r\n            <Container maxWidth={'md'} >\r\n                    { no_roots_bool ? (\r\n                        <Paper elevation={3} >\r\n                            <Grid container alignItems={'center'} direction={'column'}>\r\n                                <Grid item >\r\n                                    <FormControl style={{minWidth: 250}} >\r\n                                        <InputLabel>Select category tree</InputLabel>\r\n                                        <Select value={treeName}\r\n                                            onChange={(e) => changedCateTreeOption(e.target.value)}>\r\n                                            {\r\n                                                _.map(allRoots, (node) => {\r\n                                                    return (<MenuItem value={node}>{node}</MenuItem>)\r\n                                                })\r\n                                            }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item className={classes.button}>\r\n                                    <Tooltip title=\"Go to selected category!\">\r\n                                        <Button style={{marginTop: '10px', marginBottom: '10px', marginRight: '5px'}} onClick={loadClicked} variant=\"contained\" color=\"primary\">\r\n                                            Go!\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Create new category tree!\">\r\n                                        <Button style={{marginTop: '10px', marginBottom: '10px', marginLeft: '5px'}} variant=\"contained\" color=\"primary\">\r\n                                            <FormDialog text={'Create'} onClickOk={createClicked} />\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>) :\r\n                        (<InitialComponent/>)\r\n                    }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyLoader;"]},"metadata":{},"sourceType":"module"}