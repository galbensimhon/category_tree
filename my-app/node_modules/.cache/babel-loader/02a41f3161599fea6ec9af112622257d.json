{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\MyContextMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nexport function MyContextMenu(props) {\n  _s();\n\n  //const classes = useStyle()\n  //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\n  const {\n    node,\n    parent,\n    items\n  } = props;\n  const [isVisible, setVisible] = useState(false);\n  const [xPointer, setX] = useState(0);\n  const [yPointer, setY] = useState(0);\n  useEffect(() => {\n    const current = parent.current;\n    if (!current) return;\n\n    const showMenu = event => {\n      event.preventDefault();\n      setVisible(true);\n      setX(event.clientX);\n      setY(event.clientY);\n      console.log('i was hereeeee');\n    };\n\n    const closeMenu = () => {\n      setVisible(false);\n      console.log('i was hereeeee');\n    };\n\n    current.addEventListener('contextmenu', showMenu);\n    current.addEventListener('click', closeMenu); // to avoid memory leaks in case user click a lot\n\n    return function cleanup() {\n      current.removeEventListener('contextmenu', showMenu);\n      current.removeEventListener('click', closeMenu);\n    };\n  });\n  return isVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"context-menu\",\n    style: {\n      top: yPointer,\n      left: xPointer\n    },\n    children: items.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: item.onClick(node),\n        className: \"context-menu-item\",\n        children: item.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this) : null;\n}\n\n_s(MyContextMenu, \"PmGZxeQrJPFXdeb8UhINifcCET0=\");\n\n_c = MyContextMenu;\n;\nexport default MyContextMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyContextMenu\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/MyContextMenu.js"],"names":["React","Component","useEffect","useState","MyContextMenu","props","node","parent","items","isVisible","setVisible","xPointer","setX","yPointer","setY","current","showMenu","event","preventDefault","clientX","clientY","console","log","closeMenu","addEventListener","cleanup","removeEventListener","top","left","map","item","index","onClick","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACjC;AACA;AACA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,MAAP;AAAeC,IAAAA;AAAf,MAAwBH,KAA9B;AAEA,QAAM,CAACI,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,IAAX,IAAmBT,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACU,QAAD,EAAWC,IAAX,IAAmBX,QAAQ,CAAC,CAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,OAAO,GAAGR,MAAM,CAACQ,OAAvB;AACA,QAAG,CAACA,OAAJ,EAAa;;AAEb,UAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACAR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,IAAI,CAACK,KAAK,CAACE,OAAP,CAAJ;AACAL,MAAAA,IAAI,CAACG,KAAK,CAACG,OAAP,CAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,KAND;;AAOA,UAAMC,SAAS,GAAG,MAAM;AACpBb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEH,KAJD;;AAKAP,IAAAA,OAAO,CAACS,gBAAR,CAAyB,aAAzB,EAAwCR,QAAxC;AACAD,IAAAA,OAAO,CAACS,gBAAR,CAAyB,OAAzB,EAAkCD,SAAlC,EAjBY,CAmBZ;;AACA,WAAO,SAASE,OAAT,GAAkB;AACrBV,MAAAA,OAAO,CAACW,mBAAR,CAA4B,aAA5B,EAA2CV,QAA3C;AACAD,MAAAA,OAAO,CAACW,mBAAR,CAA4B,OAA5B,EAAqCH,SAArC;AAEH,KAJD;AAKH,GAzBQ,CAAT;AA2BA,SAAOd,SAAS,gBACZ;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAACkB,MAAAA,GAAG,EAAEd,QAAN;AAAgBe,MAAAA,IAAI,EAAEjB;AAAtB,KAArC;AAAA,cACKH,KAAK,CAACqB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,0BACI;AAAiB,QAAA,OAAO,EAAED,IAAI,CAACE,OAAL,CAAa1B,IAAb,CAA1B;AAA8C,QAAA,SAAS,EAAC,mBAAxD;AAAA,kBAA6EwB,IAAI,CAACG;AAAlF,SAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJA;AADL;AAAA;AAAA;AAAA;AAAA,UADY,GAQZ,IARJ;AASH;;GA7Ce3B,a;;KAAAA,a;AA6Cf;AAED,eAAeA,aAAf","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\r\n\r\nexport function MyContextMenu(props) {\r\n    //const classes = useStyle()\r\n    //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\r\n    const {node, parent, items} = props;\r\n\r\n    const [isVisible, setVisible] = useState(false);\r\n    const [xPointer, setX] = useState(0);\r\n    const [yPointer, setY] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const current = parent.current;\r\n        if(!current) return;\r\n\r\n        const showMenu = (event) => {\r\n            event.preventDefault();\r\n            setVisible(true);\r\n            setX(event.clientX);\r\n            setY(event.clientY);\r\n            console.log('i was hereeeee')\r\n        }\r\n        const closeMenu = () => {\r\n            setVisible(false);\r\n            console.log('i was hereeeee')\r\n\r\n        }\r\n        current.addEventListener('contextmenu', showMenu);\r\n        current.addEventListener('click', closeMenu);\r\n\r\n        // to avoid memory leaks in case user click a lot\r\n        return function cleanup(){\r\n            current.removeEventListener('contextmenu', showMenu);\r\n            current.removeEventListener('click', closeMenu);\r\n\r\n        }\r\n    });\r\n\r\n    return isVisible ? (\r\n        <div className='context-menu' style={{top: yPointer, left: xPointer}}>\r\n            {items.map((item, index) => {\r\n                return (\r\n                    <div key={index} onClick={item.onClick(node)} className='context-menu-item'>{item.text}</div>\r\n                )\r\n            })}\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default MyContextMenu;"]},"metadata":{},"sourceType":"module"}