{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\CateTree.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport values from 'lodash/values';\nimport Node from \"./Node.js\";\nconst data = {\n  '/root': {\n    path: '/root',\n    type: 'folder',\n    isRoot: true,\n    isOpen: false,\n    children: ['/root/gal', '/root/ben']\n  },\n  '/root/gal': {\n    path: '/root/gal',\n    type: 'folder',\n    isOpen: false,\n    children: ['/root/gal/read.txt']\n  },\n  '/root/gal/read.txt': {\n    path: '/root/gal/read.txt',\n    type: 'file',\n    isOpen: false,\n    content: 'some test'\n  }\n}; // TODO: should implement this functions\n// change node, and also his father (children), can get by short the path by 1\n\nfunction getItemsContextMenu() {\n  const onClickAddFile = (node, name) => {\n    // add new node by name, also change father childrens\n    console.log('add file');\n  };\n\n  const onClickAddDirectory = (node, name) => {\n    // add new node by name, also change father childrens\n    console.log('add directory');\n  };\n\n  const onClickDeleteDirectory = node => {\n    // delete node by name, also change father childrens\n    console.log('delete directory');\n  };\n\n  const onClickDeleteFile = node => {\n    // delete node by name, also change father childrens\n    console.log('delete file');\n  };\n\n  const onClickRename = (node, name) => {\n    // change path of node, also change father childrens\n    console.log('rename file/directory');\n  };\n\n  return [{\n    text: 'Add file',\n    type: 'directory',\n    onClick: node => {\n      onClickAddFile(node);\n    }\n  }, {\n    text: 'Add directory',\n    type: 'directory',\n    onClick: node => {\n      onClickAddDirectory(node);\n    }\n  }, {\n    text: 'Delete',\n    type: 'directory',\n    onClick: node => {\n      onClickDeleteDirectory(node);\n    }\n  }, {\n    text: 'Delete',\n    type: 'file',\n    onClick: node => {\n      onClickDeleteFile(node);\n    }\n  }, {\n    text: 'Rename',\n    type: 'file',\n    onClick: node => {\n      onClickRename(node);\n    }\n  }];\n}\n\nexport function CateTree(props) {\n  _s();\n\n  //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\n  const [nodes, setNodes] = useState(data);\n  const items = getItemsContextMenu(); //const nodes = data;\n\n  const getRootNodes = () => {\n    console.log(values(nodes).filter(node => node.isRoot === true));\n    return values(nodes).filter(node => node.isRoot === true);\n  };\n\n  const onToggle = node => {\n    // nodes[node.path].isOpen = !node.isOpen;\n    let node_copy = JSON.parse(JSON.stringify(node));\n    node_copy.isOpen = !node_copy.isOpen;\n    setNodes({ ...nodes\n    }); // let curr_node_path = nodes[node.path];\n    // let open_state = !node.isOpen;\n    // setNodes({...nodes, curr_node_path: {}})\n    // setNodes({...nodes, curr_node_path: {...node, isOpen :open_state  }})\n    // setNodes({...nodes, curr_node.isOpen = !node.isOpen})\n    // setNodes(nodes);\n  };\n\n  const getChildNodes = node => {\n    return node.children ? node.children.map(path => nodes[path]) : [];\n  };\n\n  const root = getRootNodes();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: root.map(node => /*#__PURE__*/_jsxDEV(Node, {\n      node: node,\n      getChildren: getChildNodes,\n      level: 1,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 35\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CateTree, \"0MM9DAho9etskPZtIZVNNkY0AzQ=\");\n\n_c = CateTree;\nexport default CateTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"CateTree\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/CateTree.js"],"names":["React","Component","useState","values","Node","data","path","type","isRoot","isOpen","children","content","getItemsContextMenu","onClickAddFile","node","name","console","log","onClickAddDirectory","onClickDeleteDirectory","onClickDeleteFile","onClickRename","text","onClick","CateTree","props","nodes","setNodes","items","getRootNodes","filter","onToggle","node_copy","JSON","parse","stringify","getChildNodes","map","root"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport values from 'lodash/values';\r\nimport Node from \"./Node.js\";\r\n\r\nconst data = {\r\n    '/root': {\r\n        path: '/root',\r\n        type: 'folder',\r\n        isRoot: true,\r\n        isOpen: false,\r\n        children: ['/root/gal', '/root/ben']\r\n    },\r\n    '/root/gal': {\r\n        path: '/root/gal',\r\n        type: 'folder',\r\n        isOpen: false,\r\n        children: ['/root/gal/read.txt']\r\n    },\r\n    '/root/gal/read.txt': {\r\n        path: '/root/gal/read.txt',\r\n        type: 'file',\r\n        isOpen: false,\r\n        content: 'some test'\r\n    }\r\n}\r\n\r\n// TODO: should implement this functions\r\n// change node, and also his father (children), can get by short the path by 1\r\n\r\nfunction getItemsContextMenu(){\r\n    const onClickAddFile = (node, name) => {\r\n        // add new node by name, also change father childrens\r\n        console.log('add file')\r\n    };\r\n    const onClickAddDirectory = (node, name) => {\r\n        // add new node by name, also change father childrens\r\n        console.log('add directory')\r\n\r\n    };\r\n    const onClickDeleteDirectory = (node) => {\r\n        // delete node by name, also change father childrens\r\n        console.log('delete directory')\r\n\r\n    };\r\n    const onClickDeleteFile = (node) => {\r\n        // delete node by name, also change father childrens\r\n        console.log('delete file')\r\n\r\n    };\r\n    const onClickRename = (node, name) => {\r\n        // change path of node, also change father childrens\r\n        console.log('rename file/directory')\r\n\r\n    };\r\n    return [\r\n        {\r\n            text: 'Add file',\r\n            type: 'directory',\r\n            onClick: (node) => {\r\n                onClickAddFile(node);\r\n            }\r\n        },\r\n        {\r\n            text: 'Add directory',\r\n            type: 'directory',\r\n            onClick: (node) => {\r\n                onClickAddDirectory(node);\r\n            }\r\n        },\r\n        {\r\n            text: 'Delete',\r\n            type: 'directory',\r\n            onClick: (node) => {\r\n                onClickDeleteDirectory(node);\r\n            }\r\n        },\r\n        {\r\n            text: 'Delete',\r\n            type: 'file',\r\n            onClick: (node) => {\r\n                onClickDeleteFile(node);\r\n            }\r\n        },\r\n        {\r\n            text: 'Rename',\r\n            type: 'file',\r\n            onClick: (node) => {\r\n                onClickRename(node);\r\n            }\r\n        },\r\n\r\n    ];\r\n}\r\n\r\nexport function CateTree(props) {\r\n    //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\r\n    const [nodes, setNodes] = useState(data);\r\n    const items = getItemsContextMenu()\r\n    //const nodes = data;\r\n    const getRootNodes = () => {\r\n        console.log(values(nodes).filter(node => node.isRoot === true));\r\n        return values(nodes).filter(node => node.isRoot === true);\r\n    }\r\n\r\n    const onToggle = (node) => {\r\n        // nodes[node.path].isOpen = !node.isOpen;\r\n        let node_copy = JSON.parse(JSON.stringify(node));\r\n        node_copy.isOpen = !node_copy.isOpen;\r\n        setNodes({...nodes, });\r\n        // let curr_node_path = nodes[node.path];\r\n        // let open_state = !node.isOpen;\r\n        // setNodes({...nodes, curr_node_path: {}})\r\n        // setNodes({...nodes, curr_node_path: {...node, isOpen :open_state  }})\r\n        // setNodes({...nodes, curr_node.isOpen = !node.isOpen})\r\n        // setNodes(nodes);\r\n    }\r\n\r\n    const getChildNodes = (node) => {\r\n        return node.children ? node.children.map(path => nodes[path]) : [];\r\n    }\r\n\r\n    const root = getRootNodes();\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                root.map(node => (<Node node={node} getChildren={getChildNodes} level={1} onToggle={onToggle}/>))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CateTree;"]},"metadata":{},"sourceType":"module"}