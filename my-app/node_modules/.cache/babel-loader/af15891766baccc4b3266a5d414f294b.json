{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\Node.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport _ from 'lodash';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport FormDialog from \"./FormDialog\";\nimport { FOLDER, RENAME, FILE } from \"../utills/constants\";\nimport AlertDialog from \"./AlertDialog\";\nimport '../App.css';\nconst attributes = {\n  className: 'custom-root',\n  disabledClassName: 'custom-disabled',\n  dividerClassName: 'custom-divider',\n  selectedClassName: 'custom-selected'\n};\nexport function Node(props) {\n  _s();\n\n  //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\n  const {\n    node,\n    getChildren,\n    level,\n    onToggle,\n    menuItems,\n    setters\n  } = props; // const NodeRef = useRef(null);\n\n  const [showContextMenu, setShowContextMenu] = useState(false); //const [selectedName, setSelectedName] = useState('');\n\n  const getName = node => _.last(node.path.split('/')); // const onContextMenu = () => {\n  //     setShowContextMenu(true)\n  // }\n\n\n  const handleClick = e => {\n    if (e.type === 'click') {\n      onToggle(node);\n    } else if (e.type === 'contextmenu') {\n      setShowContextMenu(true);\n    }\n  };\n\n  const type_to_setter = {\n    'Add file': setters.ADD,\n    'Add folder': setters.ADD,\n    'Rename': setters.RNAME,\n    'Delete': setters.DEL\n  };\n\n  const handleClickOk = (name, type) => {\n    if (type === RENAME) {\n      type_to_setter[type](`${node.path} ${name}`);\n    } else {\n      type_to_setter[type](`${node.path}/${name}`, type === 'Add file');\n    }\n  };\n\n  const handleDeleteClick = () => {\n    type_to_setter['Delete'](node.path);\n  };\n\n  let node_chevron = null;\n\n  let node_icon = /*#__PURE__*/_jsxDEV(FaFile, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 21\n  }, this);\n\n  let subtree_node = null; // in case node is folder, otherwise is must be file\n\n  if (node.type === FOLDER) {\n    if (node.isOpen) {\n      node_chevron = /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 28\n      }, this);\n      node_icon = /*#__PURE__*/_jsxDEV(FaFolderOpen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this);\n      subtree_node = _.map(getChildren(node), child => {\n        return /*#__PURE__*/_jsxDEV(Node, { ...props,\n          node: child,\n          level: level + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this);\n      });\n    } else {\n      node_chevron = /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 28\n      }, this);\n      node_icon = /*#__PURE__*/_jsxDEV(FaFolder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this);\n    }\n  }\n\n  let items = node.type === FILE ? menuItems.filter(item => item.type === 'both') : menuItems;\n  items = _.map(items, item => {\n    return /*#__PURE__*/_jsxDEV(MenuItem, {\n      attributes: attributes,\n      children: item.needNameInput ? /*#__PURE__*/_jsxDEV(FormDialog, {\n        text: item.text,\n        onClickOk: handleClickOk\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 26\n      }, this) : node.type === FOLDER ? /*#__PURE__*/_jsxDEV(AlertDialog, {\n        text: item.text,\n        alert_message: 'Alert!',\n        content: 'Are u sure to delete this folder? each folder/file inside will be deleted too.',\n        handleClickOk: handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 53\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleDeleteClick,\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }); // each node have unique path\n\n  let unique_id = node.path;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: `${level * 15}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(ContextMenuTrigger, {\n        id: unique_id,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: '5px',\n            fontSize: '20px',\n            backgroundColor: '#fff'\n          },\n          onClick: handleClick,\n          onContextMenu: handleClick,\n          children: [node_icon, getName(node), node_chevron]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), showContextMenu ? /*#__PURE__*/_jsxDEV(ContextMenu, {\n        hideOnLeave: true,\n        id: unique_id,\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 40\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), subtree_node]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Node, \"nxX4hwhXKAI6h/KOUx1mI+wkp4I=\");\n\n_c = Node;\nexport default Node;\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/Node.js"],"names":["React","useState","_","FaFile","FaFolder","FaFolderOpen","FaChevronDown","FaChevronRight","ContextMenu","MenuItem","ContextMenuTrigger","FormDialog","FOLDER","RENAME","FILE","AlertDialog","attributes","className","disabledClassName","dividerClassName","selectedClassName","Node","props","node","getChildren","level","onToggle","menuItems","setters","showContextMenu","setShowContextMenu","getName","last","path","split","handleClick","e","type","type_to_setter","ADD","RNAME","DEL","handleClickOk","name","handleDeleteClick","node_chevron","node_icon","subtree_node","isOpen","map","child","items","filter","item","needNameInput","text","unique_id","paddingLeft","marginRight","fontSize","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport _ from 'lodash';\r\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa'\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport FormDialog from \"./FormDialog\";\r\nimport {FOLDER, RENAME, FILE} from \"../utills/constants\"\r\nimport AlertDialog from \"./AlertDialog\";\r\nimport '../App.css'\r\n\r\nconst attributes = {\r\n    className: 'custom-root',\r\n    disabledClassName: 'custom-disabled',\r\n    dividerClassName: 'custom-divider',\r\n    selectedClassName: 'custom-selected'\r\n}\r\n\r\nexport function Node(props) {\r\n    //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\r\n    const { node, getChildren, level, onToggle, menuItems, setters } = props;\r\n    // const NodeRef = useRef(null);\r\n    const [showContextMenu, setShowContextMenu] = useState(false);\r\n    //const [selectedName, setSelectedName] = useState('');\r\n\r\n    const getName = (node) => _.last(node.path.split('/'));\r\n    // const onContextMenu = () => {\r\n    //     setShowContextMenu(true)\r\n    // }\r\n    const handleClick = (e) => {\r\n        if (e.type === 'click') {\r\n            onToggle(node);\r\n        } else if (e.type === 'contextmenu') {\r\n            setShowContextMenu(true);\r\n        }\r\n    }\r\n\r\n    const type_to_setter = {\r\n        'Add file': setters.ADD,\r\n        'Add folder': setters.ADD,\r\n        'Rename': setters.RNAME,\r\n        'Delete': setters.DEL\r\n    }\r\n    const handleClickOk = (name, type) => {\r\n        if(type === RENAME){\r\n            type_to_setter[type](`${node.path} ${name}`);\r\n        }\r\n        else{\r\n            type_to_setter[type](`${node.path}/${name}`, type === 'Add file');\r\n        }\r\n    }\r\n    const handleDeleteClick = () => {\r\n        type_to_setter['Delete'](node.path);\r\n    }\r\n\r\n    let node_chevron = null;\r\n    let node_icon = <FaFile />;\r\n    let subtree_node = null;\r\n    // in case node is folder, otherwise is must be file\r\n    if(node.type === FOLDER){\r\n        if(node.isOpen){\r\n            node_chevron = <FaChevronDown />;\r\n            node_icon = <FaFolderOpen />;\r\n            subtree_node = _.map(getChildren(node), (child) => {\r\n                return (<Node {...props} node={child} level={level+1} />)\r\n            });\r\n        }\r\n        else{\r\n            node_chevron = <FaChevronRight />;\r\n            node_icon = <FaFolder />;\r\n        }\r\n    }\r\n\r\n    let items = node.type === FILE ? menuItems.filter((item) => item.type === 'both') : menuItems;\r\n    items = _.map(items, (item) => {\r\n        return (\r\n            <MenuItem attributes={attributes}>\r\n                {\r\n                    item.needNameInput ?\r\n                        (<FormDialog text={item.text} onClickOk={handleClickOk} />) :\r\n                        (\r\n                            node.type === FOLDER ? (<AlertDialog text={item.text} alert_message={'Alert!'} content={'Are u sure to delete this folder? each folder/file inside will be deleted too.'} handleClickOk={handleDeleteClick} />) :\r\n                                (<div onClick={handleDeleteClick}>{item.text}</div>)\r\n                        )\r\n                }\r\n            </MenuItem>\r\n        )\r\n    });\r\n\r\n    // each node have unique path\r\n    let unique_id = node.path;\r\n    return(\r\n        <React.Fragment>\r\n            <div style={{paddingLeft: `${level*15}px`}} >\r\n                <ContextMenuTrigger id={unique_id}>\r\n                    <div style={{marginRight: '5px', fontSize: '20px', backgroundColor: '#fff'}} onClick={handleClick} onContextMenu={handleClick} >\r\n                        { node_icon }\r\n                        { getName(node) }\r\n                        { node_chevron }\r\n                    </div>\r\n                </ContextMenuTrigger>\r\n                {\r\n                    showContextMenu ? (<ContextMenu hideOnLeave={true} id={unique_id}>{items}</ContextMenu>) : null\r\n                }\r\n            </div>\r\n            { subtree_node }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Node;"]},"metadata":{},"sourceType":"module"}