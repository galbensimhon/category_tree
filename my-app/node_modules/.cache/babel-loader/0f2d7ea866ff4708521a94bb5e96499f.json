{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar CssClasses;\n\n(function (CssClasses) {\n  CssClasses[\"RICH\"] = \"mdc-tooltip--rich\";\n  CssClasses[\"SHOWN\"] = \"mdc-tooltip--shown\";\n  CssClasses[\"SHOWING\"] = \"mdc-tooltip--showing\";\n  CssClasses[\"SHOWING_TRANSITION\"] = \"mdc-tooltip--showing-transition\";\n  CssClasses[\"HIDE\"] = \"mdc-tooltip--hide\";\n  CssClasses[\"HIDE_TRANSITION\"] = \"mdc-tooltip--hide-transition\";\n  CssClasses[\"MULTILINE_TOOLTIP\"] = \"mdc-tooltip--multiline\";\n})(CssClasses || (CssClasses = {}));\n\nvar numbers = {\n  BOUNDED_ANCHOR_GAP: 4,\n  UNBOUNDED_ANCHOR_GAP: 8,\n  MIN_VIEWPORT_TOOLTIP_THRESHOLD: 8,\n  HIDE_DELAY_MS: 600,\n  SHOW_DELAY_MS: 500,\n  // LINT.IfChange(tooltip-dimensions)\n  MIN_HEIGHT: 24,\n  MAX_WIDTH: 200\n};\nvar attributes = {\n  ARIA_EXPANDED: 'aria-expanded',\n  ARIA_HASPOPUP: 'aria-haspopup',\n  PERSISTENT: 'data-mdc-tooltip-persistent'\n};\nvar events = {\n  HIDDEN: 'MDCTooltip:hidden'\n};\n/** Enum for possible tooltip positioning relative to its anchor element. */\n\nvar XPosition;\n\n(function (XPosition) {\n  XPosition[XPosition[\"DETECTED\"] = 0] = \"DETECTED\";\n  XPosition[XPosition[\"START\"] = 1] = \"START\"; // Note: CENTER is not valid for rich tooltips.\n\n  XPosition[XPosition[\"CENTER\"] = 2] = \"CENTER\";\n  XPosition[XPosition[\"END\"] = 3] = \"END\";\n})(XPosition || (XPosition = {}));\n\nvar YPosition;\n\n(function (YPosition) {\n  YPosition[YPosition[\"DETECTED\"] = 0] = \"DETECTED\";\n  YPosition[YPosition[\"ABOVE\"] = 1] = \"ABOVE\";\n  YPosition[YPosition[\"BELOW\"] = 2] = \"BELOW\";\n})(YPosition || (YPosition = {}));\n/**\n * Enum for possible anchor boundary types. This determines the gap between the\n * bottom of the anchor and the tooltip element.\n * Bounded anchors have an identifiable boundary (e.g. buttons).\n * Unbounded anchors don't have a visually declared boundary (e.g. plain text).\n */\n\n\nvar AnchorBoundaryType;\n\n(function (AnchorBoundaryType) {\n  AnchorBoundaryType[AnchorBoundaryType[\"BOUNDED\"] = 0] = \"BOUNDED\";\n  AnchorBoundaryType[AnchorBoundaryType[\"UNBOUNDED\"] = 1] = \"UNBOUNDED\";\n})(AnchorBoundaryType || (AnchorBoundaryType = {}));\n\nexport { CssClasses, numbers, attributes, events, XPosition, AnchorBoundaryType, YPosition };","map":{"version":3,"sources":["constants.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAqBG;AAEH,IAAK,UAAL;;AAAA,CAAA,UAAK,UAAL,EAAe;AACb,EAAA,UAAA,CAAA,MAAA,CAAA,GAAA,mBAAA;AACA,EAAA,UAAA,CAAA,OAAA,CAAA,GAAA,oBAAA;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,sBAAA;AACA,EAAA,UAAA,CAAA,oBAAA,CAAA,GAAA,iCAAA;AACA,EAAA,UAAA,CAAA,MAAA,CAAA,GAAA,mBAAA;AACA,EAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,8BAAA;AACA,EAAA,UAAA,CAAA,mBAAA,CAAA,GAAA,wBAAA;AACD,CARD,EAAK,UAAU,KAAV,UAAU,GAAA,EAAA,CAAf;;AAUA,IAAM,OAAO,GAAG;AACd,EAAA,kBAAkB,EAAE,CADN;AAEd,EAAA,oBAAoB,EAAE,CAFR;AAGd,EAAA,8BAA8B,EAAE,CAHlB;AAId,EAAA,aAAa,EAAE,GAJD;AAKd,EAAA,aAAa,EAAE,GALD;AAMd;AACA,EAAA,UAAU,EAAE,EAPE;AAQd,EAAA,SAAS,EAAE;AARG,CAAhB;AAYA,IAAM,UAAU,GAAG;AACjB,EAAA,aAAa,EAAE,eADE;AAEjB,EAAA,aAAa,EAAE,eAFE;AAGjB,EAAA,UAAU,EAAE;AAHK,CAAnB;AAMA,IAAM,MAAM,GAAG;AACb,EAAA,MAAM,EAAE;AADK,CAAf;AAIA;;AACA,IAAK,SAAL;;AAAA,CAAA,UAAK,SAAL,EAAc;AACZ,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA,CAFY,CAGZ;;AACA,EAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,SAAA,CAAA,SAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACD,CAND,EAAK,SAAS,KAAT,SAAS,GAAA,EAAA,CAAd;;AAQA,IAAK,SAAL;;AAAA,CAAA,UAAK,SAAL,EAAc;AACZ,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACD,CAJD,EAAK,SAAS,KAAT,SAAS,GAAA,EAAA,CAAd;AAMA;;;;;AAKG;;;AACH,IAAK,kBAAL;;AAAA,CAAA,UAAK,kBAAL,EAAuB;AACrB,EAAA,kBAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,kBAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACD,CAHD,EAAK,kBAAkB,KAAlB,kBAAkB,GAAA,EAAA,CAAvB;;AAKA,SACE,UADF,EAEE,OAFF,EAGE,UAHF,EAIE,MAJF,EAKE,SALF,EAME,kBANF,EAOE,SAPF","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar CssClasses;\n(function (CssClasses) {\n    CssClasses[\"RICH\"] = \"mdc-tooltip--rich\";\n    CssClasses[\"SHOWN\"] = \"mdc-tooltip--shown\";\n    CssClasses[\"SHOWING\"] = \"mdc-tooltip--showing\";\n    CssClasses[\"SHOWING_TRANSITION\"] = \"mdc-tooltip--showing-transition\";\n    CssClasses[\"HIDE\"] = \"mdc-tooltip--hide\";\n    CssClasses[\"HIDE_TRANSITION\"] = \"mdc-tooltip--hide-transition\";\n    CssClasses[\"MULTILINE_TOOLTIP\"] = \"mdc-tooltip--multiline\";\n})(CssClasses || (CssClasses = {}));\nvar numbers = {\n    BOUNDED_ANCHOR_GAP: 4,\n    UNBOUNDED_ANCHOR_GAP: 8,\n    MIN_VIEWPORT_TOOLTIP_THRESHOLD: 8,\n    HIDE_DELAY_MS: 600,\n    SHOW_DELAY_MS: 500,\n    // LINT.IfChange(tooltip-dimensions)\n    MIN_HEIGHT: 24,\n    MAX_WIDTH: 200,\n};\nvar attributes = {\n    ARIA_EXPANDED: 'aria-expanded',\n    ARIA_HASPOPUP: 'aria-haspopup',\n    PERSISTENT: 'data-mdc-tooltip-persistent',\n};\nvar events = {\n    HIDDEN: 'MDCTooltip:hidden',\n};\n/** Enum for possible tooltip positioning relative to its anchor element. */\nvar XPosition;\n(function (XPosition) {\n    XPosition[XPosition[\"DETECTED\"] = 0] = \"DETECTED\";\n    XPosition[XPosition[\"START\"] = 1] = \"START\";\n    // Note: CENTER is not valid for rich tooltips.\n    XPosition[XPosition[\"CENTER\"] = 2] = \"CENTER\";\n    XPosition[XPosition[\"END\"] = 3] = \"END\";\n})(XPosition || (XPosition = {}));\nvar YPosition;\n(function (YPosition) {\n    YPosition[YPosition[\"DETECTED\"] = 0] = \"DETECTED\";\n    YPosition[YPosition[\"ABOVE\"] = 1] = \"ABOVE\";\n    YPosition[YPosition[\"BELOW\"] = 2] = \"BELOW\";\n})(YPosition || (YPosition = {}));\n/**\n * Enum for possible anchor boundary types. This determines the gap between the\n * bottom of the anchor and the tooltip element.\n * Bounded anchors have an identifiable boundary (e.g. buttons).\n * Unbounded anchors don't have a visually declared boundary (e.g. plain text).\n */\nvar AnchorBoundaryType;\n(function (AnchorBoundaryType) {\n    AnchorBoundaryType[AnchorBoundaryType[\"BOUNDED\"] = 0] = \"BOUNDED\";\n    AnchorBoundaryType[AnchorBoundaryType[\"UNBOUNDED\"] = 1] = \"UNBOUNDED\";\n})(AnchorBoundaryType || (AnchorBoundaryType = {}));\nexport { CssClasses, numbers, attributes, events, XPosition, AnchorBoundaryType, YPosition };\n//# sourceMappingURL=constants.js.map"]},"metadata":{},"sourceType":"module"}