{"ast":null,"code":"import { serverLocalHost } from './utills/constants';\nexport const loadTree = async id => {\n  //let res = await fetch(`${localHost}/calculate_tree/tree?tree_id=${id}`);\n  //return await res.json();\n  let url = `${serverLocalHost}/calculate_tree/tree?id=${id}`;\n  fetch(url).then(response => {\n    if (response.ok) {\n      response.json().then(json => {\n        console.log(json);\n      });\n    }\n  });\n};\nexport const loadData = async () => {\n  let url = `${serverLocalHost}/calculate_tree/load`;\n\n  try {\n    let res = await fetch(url);\n    let sean = await res.json();\n    console.log(sean);\n    return sean;\n  } catch (e) {\n    console.log('some error on load ' + e);\n  } // fetch(url).then(response => {\n  //     if (response.ok) {\n  //         response.json().then(json => {\n  //             console.log(json);\n  //         });\n  //     }\n  // });\n  // let res = await fetch(`${process.env.PUBLIC_URL}/calculate_tree/load`);\n  // return await res.json();\n\n};\nexport const saveData = async data => {\n  try {\n    let url = `${serverLocalHost}/calculate_tree/save`;\n    await fetch(url, {\n      method: 'PUT',\n      body: data\n    });\n  } catch (e) {\n    console.log(`while try to saving, the error: ${e}`);\n  } // let res = await fetch(`${process.env.PUBLIC_URL}/calculate_tree/save`, {method: 'PUT', body: data});\n  // return await res.json().body;\n\n};","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/Api.js"],"names":["serverLocalHost","loadTree","id","url","fetch","then","response","ok","json","console","log","loadData","res","sean","e","saveData","data","method","body"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,oBAA9B;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAClC;AACA;AACA,MAAIC,GAAG,GAAI,GAAEH,eAAgB,2BAA0BE,EAAG,EAA1D;AACAE,EAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbD,MAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqBG,IAAI,IAAI;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OAFD;AAGH;AACZ,GAND;AAOH,CAXM;AAaP,OAAO,MAAMG,QAAQ,GAAG,YAAY;AAChC,MAAIR,GAAG,GAAI,GAAEH,eAAgB,sBAA7B;;AACA,MAAI;AACA,QAAIY,GAAG,GAAG,MAAMR,KAAK,CAACD,GAAD,CAArB;AACA,QAAIU,IAAI,GAAG,MAAMD,GAAG,CAACJ,IAAJ,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,WAAOA,IAAP;AACH,GALD,CAMA,OAAOC,CAAP,EAAU;AACNL,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAuBI,CAAnC;AACH,GAV+B,CAYhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,CArBM;AAuBP,OAAO,MAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AACpC,MAAI;AACA,QAAIb,GAAG,GAAI,GAAEH,eAAgB,sBAA7B;AACA,UAAMI,KAAK,CAACD,GAAD,EAAM;AAACc,MAAAA,MAAM,EAAE,KAAT;AAAgBC,MAAAA,IAAI,EAAEF;AAAtB,KAAN,CAAX;AACH,GAHD,CAIA,OAAOF,CAAP,EAAU;AACNL,IAAAA,OAAO,CAACC,GAAR,CAAa,mCAAkCI,CAAE,EAAjD;AACH,GAPmC,CAQpC;AACA;;AAEH,CAXM","sourcesContent":["import {serverLocalHost} from './utills/constants'\r\nexport const loadTree = async (id) => {\r\n    //let res = await fetch(`${localHost}/calculate_tree/tree?tree_id=${id}`);\r\n    //return await res.json();\r\n    let url = `${serverLocalHost}/calculate_tree/tree?id=${id}`\r\n    fetch(url).then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(json => {\r\n                        console.log(json);\r\n                    });\r\n                }\r\n    });\r\n}\r\n\r\nexport const loadData = async () => {\r\n    let url = `${serverLocalHost}/calculate_tree/load`;\r\n    try {\r\n        let res = await fetch(url);\r\n        let sean = await res.json();\r\n        console.log(sean)\r\n        return sean;\r\n    }\r\n    catch (e) {\r\n        console.log('some error on load '+ e)\r\n    }\r\n\r\n    // fetch(url).then(response => {\r\n    //     if (response.ok) {\r\n    //         response.json().then(json => {\r\n    //             console.log(json);\r\n    //         });\r\n    //     }\r\n    // });\r\n    // let res = await fetch(`${process.env.PUBLIC_URL}/calculate_tree/load`);\r\n    // return await res.json();\r\n}\r\n\r\nexport const saveData = async (data) => {\r\n    try {\r\n        let url = `${serverLocalHost}/calculate_tree/save`;\r\n        await fetch(url, {method: 'PUT', body: data});\r\n    }\r\n    catch (e) {\r\n        console.log(`while try to saving, the error: ${e}`);\r\n    }\r\n    // let res = await fetch(`${process.env.PUBLIC_URL}/calculate_tree/save`, {method: 'PUT', body: data});\r\n    // return await res.json().body;\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}