{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\Tree.js\";\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { getItemsContextMenu } from '../utills/utills';\nimport Node from \"./Node.js\";\nimport { Container } from \"@material-ui/core\";\nexport function Tree(props) {\n  const {\n    nodes,\n    setNodes,\n    onRename,\n    onDelete,\n    onAdd,\n    rootName\n  } = props;\n\n  const getRootNodes = exposed => {\n    return _.filter(exposed, node => {\n      return node.isRoot === true;\n    });\n  };\n\n  const getExposedNodes = () => {\n    return _.filter(_.values(nodes), node => {\n      return node.path.startsWith(`/${rootName}/`) || node.path === `/${rootName}`;\n    });\n  };\n\n  const exposedNodes = getExposedNodes();\n  const rootNodes = getRootNodes(exposedNodes);\n  const items = getItemsContextMenu();\n  const setters = {\n    ADD: onAdd,\n    RNAME: onRename,\n    DEL: onDelete\n  };\n\n  const onToggle = node => {\n    let nodes_copy = JSON.parse(JSON.stringify(nodes)) || {};\n    nodes_copy[node.path].isOpen = !nodes_copy[node.path].isOpen;\n    setNodes(nodes_copy);\n  };\n\n  const getChildNodes = node => {\n    return _.map(node.children, path => {\n      return nodes[path];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: 'md',\n    children: _.map(rootNodes, node => {\n      return /*#__PURE__*/_jsxDEV(Node, {\n        node: node,\n        getChildren: getChildNodes,\n        level: 1,\n        onToggle: onToggle,\n        menuItems: items,\n        setters: setters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c = Tree;\nexport default Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tree\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/Tree.js"],"names":["React","useEffect","useState","_","getItemsContextMenu","Node","Container","Tree","props","nodes","setNodes","onRename","onDelete","onAdd","rootName","getRootNodes","exposed","filter","node","isRoot","getExposedNodes","values","path","startsWith","exposedNodes","rootNodes","items","setters","ADD","RNAME","DEL","onToggle","nodes_copy","JSON","parse","stringify","isOpen","getChildNodes","map","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACxB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA,QAA7B;AAAuCC,IAAAA,KAAvC;AAA8CC,IAAAA;AAA9C,MAA2DN,KAAjE;;AAEA,QAAMO,YAAY,GAAIC,OAAD,IAAa;AAC9B,WAAOb,CAAC,CAACc,MAAF,CAASD,OAAT,EAAmBE,IAAD,IAAU;AAAE,aAAOA,IAAI,CAACC,MAAL,KAAgB,IAAvB;AAA6B,KAA3D,CAAP;AACH,GAFD;;AAGA,QAAMC,eAAe,GAAG,MAAM;AAC1B,WAAOjB,CAAC,CAACc,MAAF,CAASd,CAAC,CAACkB,MAAF,CAASZ,KAAT,CAAT,EAA2BS,IAAD,IAAU;AAAE,aAAOA,IAAI,CAACI,IAAL,CAAUC,UAAV,CAAsB,IAAGT,QAAS,GAAlC,KAAyCI,IAAI,CAACI,IAAL,KAAe,IAAGR,QAAS,EAA3E;AAA8E,KAApH,CAAP;AACH,GAFD;;AAIA,QAAMU,YAAY,GAAGJ,eAAe,EAApC;AACA,QAAMK,SAAS,GAAGV,YAAY,CAACS,YAAD,CAA9B;AACA,QAAME,KAAK,GAAGtB,mBAAmB,EAAjC;AACA,QAAMuB,OAAO,GAAG;AACZC,IAAAA,GAAG,EAAEf,KADO;AAEZgB,IAAAA,KAAK,EAAElB,QAFK;AAGZmB,IAAAA,GAAG,EAAElB;AAHO,GAAhB;;AAMA,QAAMmB,QAAQ,GAAIb,IAAD,IAAU;AACvB,QAAIc,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe1B,KAAf,CAAX,KAAqC,EAAtD;AACAuB,IAAAA,UAAU,CAACd,IAAI,CAACI,IAAN,CAAV,CAAsBc,MAAtB,GAA+B,CAACJ,UAAU,CAACd,IAAI,CAACI,IAAN,CAAV,CAAsBc,MAAtD;AACA1B,IAAAA,QAAQ,CAACsB,UAAD,CAAR;AACH,GAJD;;AAKA,QAAMK,aAAa,GAAInB,IAAD,IAAU;AAC5B,WAAOf,CAAC,CAACmC,GAAF,CAAMpB,IAAI,CAACqB,QAAX,EAAsBjB,IAAD,IAAU;AAClC,aAAOb,KAAK,CAACa,IAAD,CAAZ;AACH,KAFM,CAAP;AAGH,GAJD;;AAMA,sBACI,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAE,IAArB;AAAA,cAEQnB,CAAC,CAACmC,GAAF,CAAMb,SAAN,EAAkBP,IAAD,IAAU;AACvB,0BAAQ,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,WAAW,EAAEmB,aAA/B;AAA8C,QAAA,KAAK,EAAE,CAArD;AAAwD,QAAA,QAAQ,EAAEN,QAAlE;AACM,QAAA,SAAS,EAAEL,KADjB;AACwB,QAAA,OAAO,EAAEC;AADjC;AAAA;AAAA;AAAA;AAAA,cAAR;AAEH,KAHD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;KAxCepB,I;AA0ChB,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {getItemsContextMenu} from '../utills/utills'\r\nimport Node from \"./Node.js\";\r\nimport {Container} from \"@material-ui/core\";\r\n\r\nexport function Tree(props) {\r\n    const { nodes, setNodes, onRename, onDelete, onAdd, rootName } = props;\r\n\r\n    const getRootNodes = (exposed) => {\r\n        return _.filter(exposed, (node) => { return node.isRoot === true;});\r\n    }\r\n    const getExposedNodes = () => {\r\n        return _.filter(_.values(nodes), (node) => { return node.path.startsWith(`/${rootName}/`) || node.path === `/${rootName}`;})\r\n    }\r\n\r\n    const exposedNodes = getExposedNodes();\r\n    const rootNodes = getRootNodes(exposedNodes);\r\n    const items = getItemsContextMenu();\r\n    const setters = {\r\n        ADD: onAdd,\r\n        RNAME: onRename,\r\n        DEL: onDelete,\r\n    }\r\n\r\n    const onToggle = (node) => {\r\n        let nodes_copy = JSON.parse(JSON.stringify(nodes)) || {};\r\n        nodes_copy[node.path].isOpen = !nodes_copy[node.path].isOpen;\r\n        setNodes(nodes_copy);\r\n    }\r\n    const getChildNodes = (node) => {\r\n        return _.map(node.children, (path) => {\r\n            return nodes[path];\r\n        });\r\n    }\r\n\r\n    return(\r\n        <Container maxWidth={'md'} >\r\n            {\r\n                _.map(rootNodes, (node) => {\r\n                    return (<Node node={node} getChildren={getChildNodes} level={1} onToggle={onToggle}\r\n                                  menuItems={items} setters={setters} />)\r\n                })\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Tree;"]},"metadata":{},"sourceType":"module"}