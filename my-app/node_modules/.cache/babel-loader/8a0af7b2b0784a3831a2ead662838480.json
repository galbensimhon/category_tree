{"ast":null,"code":"import { FOLDER, serverLocalHost } from './utills/constants';\nimport _ from \"lodash\";\nexport const loadData = async () => {\n  let url = `${serverLocalHost}/calculate_tree/load`;\n\n  try {\n    let res = await fetch(url);\n    let sean = await res.json();\n    console.log(sean);\n    return sean;\n  } catch (e) {\n    console.log('some error on load ' + e);\n    return null;\n  }\n};\n\nconst compressData = data => {\n  let newData = _.values(data);\n\n  newData = _.map(newData, node => {\n    return node.isOpen ? { ...node,\n      isOpen: false\n    } : node;\n  });\n  let obj = {};\n\n  _.forEach(newData, node => {\n    obj[node.path] = node;\n  });\n\n  return obj;\n};\n\nexport const saveData = async data => {\n  let dataToSave = exportData(data);\n\n  try {\n    const url = `${serverLocalHost}/calculate_tree/save`;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataToSave)\n    });\n    return await res.json();\n  } catch (e) {\n    console.log(`while try to saving, the error: ${e}`);\n    return {\n      error: 'unexpected error, in frontend!'\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/Api.js"],"names":["FOLDER","serverLocalHost","_","loadData","url","res","fetch","sean","json","console","log","e","compressData","data","newData","values","map","node","isOpen","obj","forEach","path","saveData","dataToSave","exportData","method","headers","body","JSON","stringify","error"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,eAAhB,QAAsC,oBAAtC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAChC,MAAIC,GAAG,GAAI,GAAEH,eAAgB,sBAA7B;;AACA,MAAI;AACA,QAAII,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;AACA,QAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACH,GALD,CAMA,OAAOI,CAAP,EAAU;AACNF,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAuBC,CAAnC;AACA,WAAO,IAAP;AACH;AACJ,CAZM;;AAcP,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC3B,MAAIC,OAAO,GAAGZ,CAAC,CAACa,MAAF,CAASF,IAAT,CAAd;;AACAC,EAAAA,OAAO,GAAGZ,CAAC,CAACc,GAAF,CAAMF,OAAN,EAAgBG,IAAD,IAAU;AAC/B,WAAOA,IAAI,CAACC,MAAL,GAAc,EACjB,GAAGD,IADc;AAEjBC,MAAAA,MAAM,EAAE;AAFS,KAAd,GAGHD,IAHJ;AAIH,GALS,CAAV;AAMA,MAAIE,GAAG,GAAG,EAAV;;AACAjB,EAAAA,CAAC,CAACkB,OAAF,CAAUN,OAAV,EAAoBG,IAAD,IAAU;AACzBE,IAAAA,GAAG,CAACF,IAAI,CAACI,IAAN,CAAH,GAAiBJ,IAAjB;AACH,GAFD;;AAGA,SAAOE,GAAP;AACH,CAbD;;AAeA,OAAO,MAAMG,QAAQ,GAAG,MAAOT,IAAP,IAAgB;AACpC,MAAIU,UAAU,GAAGC,UAAU,CAACX,IAAD,CAA3B;;AACA,MAAI;AACA,UAAMT,GAAG,GAAI,GAAEH,eAAgB,sBAA/B;AACA,UAAMI,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AACzBqB,MAAAA,MAAM,EAAE,MADiB;AAEzBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFgB;AAKzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf;AALmB,KAAN,CAAvB;AAOA,WAAO,MAAMlB,GAAG,CAACG,IAAJ,EAAb;AACH,GAVD,CAWA,OAAOG,CAAP,EAAU;AACNF,IAAAA,OAAO,CAACC,GAAR,CAAa,mCAAkCC,CAAE,EAAjD;AACA,WAAO;AAACmB,MAAAA,KAAK,EAAE;AAAR,KAAP;AACH;AACJ,CAjBM","sourcesContent":["import {FOLDER, serverLocalHost} from './utills/constants'\r\nimport _ from \"lodash\";\r\n\r\nexport const loadData = async () => {\r\n    let url = `${serverLocalHost}/calculate_tree/load`;\r\n    try {\r\n        let res = await fetch(url);\r\n        let sean = await res.json();\r\n        console.log(sean)\r\n        return sean;\r\n    }\r\n    catch (e) {\r\n        console.log('some error on load '+ e)\r\n        return null;\r\n    }\r\n}\r\n\r\nconst compressData = (data) => {\r\n    let newData = _.values(data);\r\n    newData = _.map(newData, (node) => {\r\n        return node.isOpen ? {\r\n            ...node,\r\n            isOpen: false\r\n        } : node;\r\n    })\r\n    let obj = {};\r\n    _.forEach(newData, (node) => {\r\n        obj[node.path] = node;\r\n    })\r\n    return obj;\r\n}\r\n\r\nexport const saveData = async (data) => {\r\n    let dataToSave = exportData(data);\r\n    try {\r\n        const url = `${serverLocalHost}/calculate_tree/save`;\r\n        const res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(dataToSave)\r\n        });\r\n        return await res.json();\r\n    }\r\n    catch (e) {\r\n        console.log(`while try to saving, the error: ${e}`);\r\n        return {error: 'unexpected error, in frontend!'}\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}