{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\MyContextMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nexport function MyContextMenu(props) {\n  _s();\n\n  //const classes = useStyle()\n  //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\n  const [isVisible, setVisible] = useState(false);\n  const [xPointer, setX] = useState(0);\n  const [yPointer, setY] = useState(0);\n  useEffect(() => {\n    const [node, parent] = props.current;\n    if (!parent) return;\n\n    const showMenu = event => {\n      event.preventDefault();\n      setVisible(true);\n      setX(event.clientX);\n      setY(event.clientY);\n    };\n\n    const closeMenu = () => {\n      setVisible(false);\n    };\n\n    parent.addEventListener('context-menu', showMenu);\n    parent.addEventListener('context-click', closeMenu); // to avoid memory leaks in case user click a lot\n\n    return function cleanup() {\n      parent.removeEventListener('context-menu', showMenu);\n      parent.removeEventListener('context-click', closeMenu);\n    };\n  });\n  return isVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"context-menu\",\n    style: {\n      top: yPointer,\n      left: xPointer\n    },\n    children: Menu\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this) : null;\n}\n\n_s(MyContextMenu, \"PmGZxeQrJPFXdeb8UhINifcCET0=\");\n\n_c = MyContextMenu;\n;\nexport default MyContextMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyContextMenu\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/MyContextMenu.js"],"names":["React","Component","useEffect","useState","MyContextMenu","props","isVisible","setVisible","xPointer","setX","yPointer","setY","node","parent","current","showMenu","event","preventDefault","clientX","clientY","closeMenu","addEventListener","cleanup","removeEventListener","top","left","Menu"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACjC;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,QAAD,EAAWC,IAAX,IAAmBN,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACO,QAAD,EAAWC,IAAX,IAAmBR,QAAQ,CAAC,CAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM,CAACU,IAAD,EAAOC,MAAP,IAAiBR,KAAK,CAACS,OAA7B;AACA,QAAG,CAACD,MAAJ,EAAY;;AACZ,UAAME,QAAQ,GAAIC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACAV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,IAAI,CAACO,KAAK,CAACE,OAAP,CAAJ;AACAP,MAAAA,IAAI,CAACK,KAAK,CAACG,OAAP,CAAJ;AAEH,KAND;;AAQA,UAAMC,SAAS,GAAG,MAAM;AACpBb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAFD;;AAGAM,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,cAAxB,EAAwCN,QAAxC;AACAF,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,eAAxB,EAAyCD,SAAzC,EAfY,CAiBZ;;AACA,WAAO,SAASE,OAAT,GAAkB;AACrBT,MAAAA,MAAM,CAACU,mBAAP,CAA2B,cAA3B,EAA2CR,QAA3C;AACAF,MAAAA,MAAM,CAACU,mBAAP,CAA2B,eAA3B,EAA4CH,SAA5C;AAEH,KAJD;AAKH,GAvBQ,CAAT;AAyBA,SAAOd,SAAS,gBACZ;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAACkB,MAAAA,GAAG,EAAEd,QAAN;AAAgBe,MAAAA,IAAI,EAAEjB;AAAtB,KAArC;AAAA,cACKkB;AADL;AAAA;AAAA;AAAA;AAAA,UADY,GAIZ,IAJJ;AAKH;;GArCetB,a;;KAAAA,a;AAqCf;AAED,eAAeA,aAAf","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\r\n\r\nexport function MyContextMenu(props) {\r\n    //const classes = useStyle()\r\n    //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\r\n    const [isVisible, setVisible] = useState(false);\r\n    const [xPointer, setX] = useState(0);\r\n    const [yPointer, setY] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const [node, parent] = props.current;\r\n        if(!parent) return;\r\n        const showMenu = (event) => {\r\n            event.preventDefault();\r\n            setVisible(true);\r\n            setX(event.clientX);\r\n            setY(event.clientY);\r\n\r\n        }\r\n\r\n        const closeMenu = () => {\r\n            setVisible(false);\r\n        }\r\n        parent.addEventListener('context-menu', showMenu);\r\n        parent.addEventListener('context-click', closeMenu);\r\n\r\n        // to avoid memory leaks in case user click a lot\r\n        return function cleanup(){\r\n            parent.removeEventListener('context-menu', showMenu);\r\n            parent.removeEventListener('context-click', closeMenu);\r\n\r\n        }\r\n    });\r\n\r\n    return isVisible ? (\r\n        <div className='context-menu' style={{top: yPointer, left: xPointer}}>\r\n            {Menu}\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default MyContextMenu;"]},"metadata":{},"sourceType":"module"}