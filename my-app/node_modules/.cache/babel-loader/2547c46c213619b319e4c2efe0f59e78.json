{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\Node.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport last from 'lodash/last';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport values from \"lodash/values\";\nimport MyContextMenu from \"./MyContextMenu\"; // TODO: gal add some styles, otherwise delete the imports\n\nexport function Node(props) {\n  _s();\n\n  //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\n  const {\n    node,\n    getChildren,\n    level,\n    onToggle\n  } = props;\n  const NodeRef = useRef(null);\n\n  const getName = node => last(node.path.split('/'));\n\n  const onContextMenu = () => {\n    return /*#__PURE__*/_jsxDEV(MyContextMenu, {\n      node: node,\n      parent: NodeRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  };\n\n  let node_chevron = /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 24\n  }, this);\n\n  let node_icon = /*#__PURE__*/_jsxDEV(FaFile, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }, this);\n\n  let subtree_node = null;\n  useEffect(() => {}, []);\n  console.log(node);\n\n  const eee = e => {\n    onToggle(node);\n  }; // in case node is folder, otherwise is must be file\n\n\n  if (node.type === 'folder') {\n    if (node.isOpen) {\n      node_chevron = /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 28\n      }, this);\n      node_icon = /*#__PURE__*/_jsxDEV(FaFolderOpen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this);\n      subtree_node = getChildren(node).filter(child => child).map(child => /*#__PURE__*/_jsxDEV(Node, { ...props,\n        node: child,\n        level: level + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this));\n    } else {\n      node_chevron = /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }, this);\n      node_icon = /*#__PURE__*/_jsxDEV(FaFolder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this);\n    }\n  }\n\n  let padding_left = level * 20 + (node.type === 'file' ? 20 : 0) + 'px';\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: padding_left\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginRight: '5px'\n        },\n        onClick: () => {\n          onToggle(node);\n        },\n        onContextMenu: () => {\n          onContextMenu(node);\n        },\n        children: [node_icon, getName(node), node_chevron]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), subtree_node]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Node, \"yYmV4krg6W9PvwwfLoshnSSLPSY=\");\n\n_c = Node;\nexport default Node;\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/Node.js"],"names":["React","useState","useRef","useEffect","last","styled","PropTypes","FaFile","FaFolder","FaFolderOpen","FaChevronDown","FaChevronRight","values","MyContextMenu","Node","props","node","getChildren","level","onToggle","NodeRef","getName","path","split","onContextMenu","node_chevron","node_icon","subtree_node","console","log","eee","e","type","isOpen","filter","child","map","padding_left","paddingLeft","marginRight"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\r\nimport last from 'lodash/last';\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from 'react-icons/fa'\r\nimport values from \"lodash/values\";\r\nimport MyContextMenu from \"./MyContextMenu\";\r\n\r\n\r\n// TODO: gal add some styles, otherwise delete the imports\r\nexport function Node(props) {\r\n    //const [nodes, setNodes] = useState(localStorage.getItem('nodes') ? localStorage.getItem('nodes') : '');\r\n    const { node, getChildren, level, onToggle } = props;\r\n    const NodeRef = useRef(null);\r\n\r\n    const getName = (node) => last(node.path.split('/'));\r\n    const onContextMenu = () => {\r\n        return (\r\n            <MyContextMenu node={node} parent={NodeRef} />\r\n            );\r\n    }\r\n    let node_chevron = <FaChevronDown />;\r\n    let node_icon = <FaFile />;\r\n    let subtree_node = null;\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    console.log(node);\r\n\r\n    const eee = (e) => {\r\n        onToggle(node);\r\n    }\r\n\r\n    // in case node is folder, otherwise is must be file\r\n    if(node.type === 'folder'){\r\n        if(node.isOpen){\r\n            node_chevron = <FaChevronDown />;\r\n            node_icon = <FaFolderOpen />;\r\n            subtree_node = getChildren(node).filter((child) => child).map((child) => (\r\n                <Node {...props} node={child} level={level+1} />\r\n            ));\r\n        }\r\n        else{\r\n            node_chevron = <FaChevronRight />;\r\n            node_icon = <FaFolder />;\r\n        }\r\n    }\r\n    let padding_left = ((level * 20) + (node.type === 'file' ? 20 : 0) ) + 'px';\r\n    return(\r\n        <React.Fragment>\r\n            <div style={{paddingLeft: padding_left}} >\r\n                <div style={{marginRight: '5px'}} onClick={() => { onToggle(node) }} onContextMenu={() => { onContextMenu(node) }} >\r\n                    { node_icon }\r\n                    { getName(node) }\r\n                    { node_chevron }\r\n                </div>\r\n            </div>\r\n            { subtree_node }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Node;"]},"metadata":{},"sourceType":"module"}