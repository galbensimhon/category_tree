{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\TreeContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { renameChild, getFatherPath, getOldNodePath, getItemsContextMenu } from '../utills/utills';\nimport Node from \"./Node.js\";\nimport { FILE, FOLDER } from \"../utills/constants\";\nimport { useHistory } from 'react-router-dom';\nimport Tree from \"./Tree\";\nimport queryString from 'query-string';\nimport { Button, Container, Typography } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormDialog from \"./FormDialog\";\nimport AlertDialog from \"./AlertDialog\";\nimport { Prompt } from 'react-router';\nconst data = {\n  '/root': {\n    path: '/root',\n    type: FOLDER,\n    isRoot: true,\n    isOpen: false,\n    children: ['/root/gal', '/root/ben']\n  },\n  '/root2': {\n    path: '/root2',\n    type: FOLDER,\n    isRoot: true,\n    isOpen: false,\n    children: ['/root2/gal2']\n  },\n  '/root2/gal2': {\n    path: '/root/gal2',\n    type: FOLDER,\n    isRoot: false,\n    isOpen: false,\n    children: []\n  },\n  '/root/gal': {\n    path: '/root/gal',\n    type: FOLDER,\n    isOpen: false,\n    children: ['/root/gal/read.txt']\n  },\n  '/root/ben': {\n    path: '/root/ben',\n    type: FOLDER,\n    isOpen: false,\n    children: []\n  },\n  '/root/gal/read.txt': {\n    path: '/root/gal/read.txt',\n    type: FILE,\n    isOpen: false\n  }\n}; // should send to tree : setChangeWithoutSaving (in case he change), treeData (the tree which he need to render)\n\nexport function TreeContainer(props) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [treeData, setTreeData] = useState(null);\n  const [changeWithoutSaving, setChangeWithoutSaving] = useState(false);\n  const [allData, setAllData] = useState(data);\n  const history = useHistory();\n\n  const newSearchClicked = () => {\n    history.push(`${process.env.PUBLIC_URL}/`);\n  };\n\n  const onSave = () => {\n    //TODO: should implement\n    setChangeWithoutSaving(false);\n  };\n\n  const fetchTree = async id => {\n    //let res = await fetch(`${process.env.PUBLIC_URL}/calculate_tree?tree_id=${id}`);\n    //return await res.json();\n    let new_data = _.filter(_.values(allData), node => {\n      return node.path.startsWith(`/${id}/`) || node.path === `/${id}`;\n    }); //return 3;\n\n\n    return new_data; //return await data.json();\n  };\n\n  useEffect(() => {\n    const onFirstRender = async () => {\n      setLoading(true);\n      let parsed = queryString.parse(window.location.search);\n\n      if (!parsed || !parsed.tree_id) {\n        alert('problem with getting category tree..');\n        history.push(`${process.env.PUBLIC_URL}/`);\n        return;\n      }\n\n      let tree_data = await fetchTree(parsed.tree_id);\n\n      if (!tree_data) {\n        alert('problem with getting category tree.\\n the id which given is not found..');\n        history.push(`${process.env.PUBLIC_URL}/`);\n        return;\n      } //let res = buildTree(tree_data, true);\n\n\n      setTreeData(tree_data); //window.addEventListener('resize', centerTree);\n\n      setLoading(false);\n    };\n\n    onFirstRender();\n  }, [history, allData]);\n\n  const LoadingComponent = () => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    justify: 'center',\n    xs: 12,\n    style: {\n      minHeight: 200\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          justifyItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            marginBottom: '10px'\n          },\n          variant: \"h5\",\n          align: \"center\",\n          color: \"textPrimary\",\n          children: \"Loading tree...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n          style: {\n            margin: 'auto'\n          },\n          color: 'primary'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this); // TODO: if it doesn't work, change to button or AlertDialog.. (not nested in button)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Prompt, {\n      when: changeWithoutSaving,\n      message: () => 'Are u sure to leave page without saving?',\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: 'sm'\n        /*className={classes.tree}*/\n        ,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          justify: 'center',\n          xs: 12,\n          md: 12,\n          spacing: 0,\n          wrap: \"nowrap\",\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Go to select another tree!\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginTop: '10px',\n                marginBottom: '10px',\n                marginRight: '5px'\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              children: changeWithoutSaving ? /*#__PURE__*/_jsxDEV(AlertDialog, {\n                text: 'Change tree',\n                content: 'Are u sure to leave page without saving?',\n                handleClickOk: newSearchClicked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: newSearchClicked,\n                children: 'Change tree'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Saving your changes..\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginTop: '10px',\n                marginBottom: '10px',\n                marginLeft: '5px'\n              },\n              onClick: onSave,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: 'xl',\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          style: {\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: 'center',\n            children: loading ? /*#__PURE__*/_jsxDEV(LoadingComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                minHeight: 200,\n                marginTop: '15px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Tree, {\n                nodes: allData,\n                exposedNodes: treeData,\n                onChangeTree: setChangeWithoutSaving,\n                setNodes: setAllData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TreeContainer, \"JHODq7uKksDk8hT88RRHG1h7C8g=\", false, function () {\n  return [useHistory];\n});\n\n_c = TreeContainer;\nexport default TreeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeContainer\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/TreeContainer.js"],"names":["React","useEffect","useState","_","renameChild","getFatherPath","getOldNodePath","getItemsContextMenu","Node","FILE","FOLDER","useHistory","Tree","queryString","Button","Container","Typography","Paper","Grid","IconButton","Tooltip","CircularProgress","FormDialog","AlertDialog","Prompt","data","path","type","isRoot","isOpen","children","TreeContainer","props","loading","setLoading","treeData","setTreeData","changeWithoutSaving","setChangeWithoutSaving","allData","setAllData","history","newSearchClicked","push","process","env","PUBLIC_URL","onSave","fetchTree","id","new_data","filter","values","node","startsWith","onFirstRender","parsed","parse","window","location","search","tree_id","alert","tree_data","LoadingComponent","minHeight","marginTop","display","flexDirection","justifyContent","justifyItems","marginBottom","margin","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {renameChild, getFatherPath, getOldNodePath, getItemsContextMenu} from '../utills/utills'\r\nimport Node from \"./Node.js\";\r\nimport {FILE, FOLDER} from \"../utills/constants\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport Tree from \"./Tree\";\r\nimport queryString from 'query-string'\r\nimport {Button, Container, Typography} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormDialog from \"./FormDialog\";\r\nimport AlertDialog from \"./AlertDialog\";\r\nimport { Prompt }  from 'react-router';\r\n\r\nconst data = {\r\n    '/root': {\r\n        path: '/root',\r\n        type: FOLDER,\r\n        isRoot: true,\r\n        isOpen: false,\r\n        children: ['/root/gal', '/root/ben']\r\n    },\r\n    '/root2': {\r\n        path: '/root2',\r\n        type: FOLDER,\r\n        isRoot: true,\r\n        isOpen: false,\r\n        children: ['/root2/gal2']\r\n    },\r\n    '/root2/gal2': {\r\n        path: '/root/gal2',\r\n        type: FOLDER,\r\n        isRoot: false,\r\n        isOpen: false,\r\n        children: []\r\n    },\r\n    '/root/gal': {\r\n        path: '/root/gal',\r\n        type: FOLDER,\r\n        isOpen: false,\r\n        children: ['/root/gal/read.txt']\r\n    },\r\n    '/root/ben': {\r\n        path: '/root/ben',\r\n        type: FOLDER,\r\n        isOpen: false,\r\n        children: []\r\n    },\r\n    '/root/gal/read.txt': {\r\n        path: '/root/gal/read.txt',\r\n        type: FILE,\r\n        isOpen: false,\r\n    }\r\n}\r\n\r\n// should send to tree : setChangeWithoutSaving (in case he change), treeData (the tree which he need to render)\r\nexport function TreeContainer(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [treeData, setTreeData] = useState(null);\r\n    const [changeWithoutSaving, setChangeWithoutSaving] = useState(false);\r\n    const [allData, setAllData] = useState(data);\r\n    const history = useHistory();\r\n\r\n    const newSearchClicked = () => {\r\n        history.push(`${process.env.PUBLIC_URL}/`);\r\n    }\r\n\r\n    const onSave = () => {\r\n        //TODO: should implement\r\n        setChangeWithoutSaving(false);\r\n    }\r\n\r\n    const fetchTree = async (id) => {\r\n        //let res = await fetch(`${process.env.PUBLIC_URL}/calculate_tree?tree_id=${id}`);\r\n        //return await res.json();\r\n        let new_data = _.filter(_.values(allData), (node) => { return node.path.startsWith(`/${id}/`) || node.path === `/${id}`;});\r\n        //return 3;\r\n        return new_data;\r\n        //return await data.json();\r\n    }\r\n\r\n    useEffect( () => {\r\n        const onFirstRender = async () => {\r\n            setLoading(true);\r\n            let parsed = queryString.parse(window.location.search);\r\n            if(!parsed || !parsed.tree_id){\r\n                alert('problem with getting category tree..');\r\n                history.push(`${process.env.PUBLIC_URL}/`);\r\n                return;\r\n            }\r\n            let tree_data = await fetchTree(parsed.tree_id);\r\n            if(!tree_data){\r\n                alert('problem with getting category tree.\\n the id which given is not found..');\r\n                history.push(`${process.env.PUBLIC_URL}/`);\r\n                return;\r\n            }\r\n            //let res = buildTree(tree_data, true);\r\n            setTreeData(tree_data);\r\n            //window.addEventListener('resize', centerTree);\r\n            setLoading(false);\r\n        }\r\n        onFirstRender();\r\n    }, [history, allData]);\r\n\r\n    const LoadingComponent = () => (\r\n        <Grid item container  justify={'center'} xs={12} style={{minHeight: 200}} >\r\n            <Grid item xs={12} style={{marginTop: '10px'}}>\r\n                <div style={{display: 'flex', flexDirection:'column', justifyContent: 'center', justifyItems: 'center'}}>\r\n                    <Typography style={{marginBottom: '10px'}} variant=\"h5\" align=\"center\" color=\"textPrimary\" >\r\n                        Loading tree...\r\n                    </Typography>\r\n                    <CircularProgress style={{margin:'auto'}} color={'primary'}/>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n    // TODO: if it doesn't work, change to button or AlertDialog.. (not nested in button)\r\n\r\n    return(\r\n        <div>\r\n            <Prompt\r\n                when={changeWithoutSaving}\r\n                message={() => 'Are u sure to leave page without saving?'}>\r\n            <Container maxWidth={'sm'} /*className={classes.tree}*/>\r\n\r\n                <Grid item container justify={'center'} xs={12} md={12} spacing={0} wrap={\"nowrap\"}>\r\n                    <Tooltip title=\"Go to select another tree!\">\r\n                        <Button style={{marginTop: '10px', marginBottom: '10px', marginRight: '5px'}} variant=\"contained\" color=\"primary\">\r\n                            {\r\n                                changeWithoutSaving ? (\r\n                                        <AlertDialog text={'Change tree'} content={'Are u sure to leave page without saving?'} handleClickOk={newSearchClicked}/>) :\r\n                                    (<div onClick={newSearchClicked}>{'Change tree'}</div>)\r\n                            }\r\n                        </Button>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Saving your changes..\">\r\n                        <Button style={{marginTop: '10px', marginBottom: '10px', marginLeft: '5px'}} onClick={onSave} variant=\"contained\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Container>\r\n            <Container maxWidth={'xl'}>\r\n                <Paper elevation={3} style={{marginBottom: '10px'}}>\r\n                    <Grid container justify={'center'}>\r\n                        {loading ? <LoadingComponent/> :\r\n                            <Grid item xs={12} style={{minHeight: 200, marginTop: '15px'}}>\r\n                                    <Tree\r\n                                        nodes={allData}\r\n                                        exposedNodes={treeData}\r\n                                        onChangeTree={setChangeWithoutSaving}\r\n                                        setNodes={setAllData}\r\n                                    />\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n            </Prompt>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TreeContainer;\r\n"]},"metadata":{},"sourceType":"module"}