{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { renameChild, getFatherPath, getOldNodePath, getItemsContextMenu } from '../utills/utills';\nimport Node from \"./Node.js\";\nimport { FILE, FOLDER } from \"../utills/constants\";\nimport { useHistory } from 'react-router-dom';\nimport Tree from \"./Tree\";\nexport function CategoryTree(props) {\n  _s();\n\n  const history = useHistory();\n\n  const newSearchClicked = () => {\n    history.push(`${process.env.PUBLIC_URL}/`);\n  };\n\n  const fetchTree = async (num, is_all_courses) => {\n    let res = await fetch(`${kdam_url}/calculate_tree?number=${num}&is_all_courses=${is_all_courses}`);\n    return await res.json();\n  };\n\n  useEffect(() => {\n    const onFirstRender = async () => {\n      setLoading(true);\n      centerTree();\n      let parsed = queryString.parse(window.location.search);\n\n      if (!parsed || !parsed.num) {\n        alert('problem with getting course number. please choose course again');\n        history.push(`${process.env.PUBLIC_URL}/`);\n        return;\n      }\n\n      if (!parsed.allcourses) {\n        alert('problem getting type of courses preferences. looking only at active courses by default');\n        parsed.allcourses = 'false';\n      }\n\n      let tree_data = await fetchTree(parsed.num, parsed.allcourses);\n\n      if (!tree_data) {\n        alert('problem with connecting to server. please try again later');\n        history.push(`${process.env.PUBLIC_URL}/`);\n        return;\n      }\n\n      if (!tree_data.children || tree_data.children.length === 0) {\n        const url = `${ug_course_url}/${tree_data.number}`;\n        setCurrentCourse(tree_data.name);\n        setCurrentCourseUrl(url);\n        setEmptyTree(true);\n      }\n\n      let res = buildTree(tree_data, true);\n      setTreeData(res);\n      window.addEventListener('resize', centerTree);\n      setLoading(false);\n    };\n\n    onFirstRender();\n  }, [history]);\n}\n\n_s(CategoryTree, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = CategoryTree;\nexport default CategoryTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryTree\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/CategoryTree.js"],"names":["React","useEffect","useState","_","renameChild","getFatherPath","getOldNodePath","getItemsContextMenu","Node","FILE","FOLDER","useHistory","Tree","CategoryTree","props","history","newSearchClicked","push","process","env","PUBLIC_URL","fetchTree","num","is_all_courses","res","fetch","kdam_url","json","onFirstRender","setLoading","centerTree","parsed","queryString","parse","window","location","search","alert","allcourses","tree_data","children","length","url","ug_course_url","number","setCurrentCourse","name","setCurrentCourseUrl","setEmptyTree","buildTree","setTreeData","addEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,WAAR,EAAqBC,aAArB,EAAoCC,cAApC,EAAoDC,mBAApD,QAA8E,kBAA9E;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,qBAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAChC,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AAEA,QAAMK,gBAAgB,GAAG,MAAM;AAC3BD,IAAAA,OAAO,CAACE,IAAR,CAAc,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,GAAvC;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,OAAOC,GAAP,EAAYC,cAAZ,KAA+B;AAC7C,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,QAAS,0BAAyBJ,GAAI,mBAAkBC,cAAe,EAA3E,CAArB;AACA,WAAO,MAAMC,GAAG,CAACG,IAAJ,EAAb;AACH,GAHD;;AAKA1B,EAAAA,SAAS,CAAE,MAAM;AACb,UAAM2B,aAAa,GAAG,YAAY;AAC9BC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,MAAAA,UAAU;AACV,UAAIC,MAAM,GAAGC,WAAW,CAACC,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAb;;AACA,UAAG,CAACL,MAAD,IAAW,CAACA,MAAM,CAACT,GAAtB,EAA0B;AACtBe,QAAAA,KAAK,CAAC,gEAAD,CAAL;AACAtB,QAAAA,OAAO,CAACE,IAAR,CAAc,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,GAAvC;AACA;AACH;;AACD,UAAG,CAACW,MAAM,CAACO,UAAX,EAAsB;AAClBD,QAAAA,KAAK,CAAC,wFAAD,CAAL;AACAN,QAAAA,MAAM,CAACO,UAAP,GAAoB,OAApB;AACH;;AACD,UAAIC,SAAS,GAAG,MAAMlB,SAAS,CAACU,MAAM,CAACT,GAAR,EAAaS,MAAM,CAACO,UAApB,CAA/B;;AACA,UAAG,CAACC,SAAJ,EAAc;AACVF,QAAAA,KAAK,CAAC,2DAAD,CAAL;AACAtB,QAAAA,OAAO,CAACE,IAAR,CAAc,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,GAAvC;AACA;AACH;;AACD,UAAG,CAACmB,SAAS,CAACC,QAAX,IAAuBD,SAAS,CAACC,QAAV,CAAmBC,MAAnB,KAA8B,CAAxD,EAA0D;AACtD,cAAMC,GAAG,GAAI,GAAEC,aAAc,IAAGJ,SAAS,CAACK,MAAO,EAAjD;AACAC,QAAAA,gBAAgB,CAACN,SAAS,CAACO,IAAX,CAAhB;AACAC,QAAAA,mBAAmB,CAACL,GAAD,CAAnB;AACAM,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AACD,UAAIxB,GAAG,GAAGyB,SAAS,CAACV,SAAD,EAAY,IAAZ,CAAnB;AACAW,MAAAA,WAAW,CAAC1B,GAAD,CAAX;AACAU,MAAAA,MAAM,CAACiB,gBAAP,CAAwB,QAAxB,EAAkCrB,UAAlC;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KA7BD;;AA+BAD,IAAAA,aAAa;AAChB,GAjCQ,EAiCN,CAACb,OAAD,CAjCM,CAAT;AAmCH;;GA/CeF,Y;UACIF,U;;;KADJE,Y;AAiDhB,eAAeA,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {renameChild, getFatherPath, getOldNodePath, getItemsContextMenu} from '../utills/utills'\r\nimport Node from \"./Node.js\";\r\nimport {FILE, FOLDER} from \"../utills/constants\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport Tree from \"./Tree\";\r\n\r\nexport function CategoryTree(props) {\r\n    const history = useHistory();\r\n\r\n    const newSearchClicked = () => {\r\n        history.push(`${process.env.PUBLIC_URL}/`);\r\n    }\r\n\r\n    const fetchTree = async (num, is_all_courses) => {\r\n        let res = await fetch(`${kdam_url}/calculate_tree?number=${num}&is_all_courses=${is_all_courses}`);\r\n        return await res.json();\r\n    }\r\n\r\n    useEffect( () => {\r\n        const onFirstRender = async () => {\r\n            setLoading(true);\r\n            centerTree();\r\n            let parsed = queryString.parse(window.location.search)\r\n            if(!parsed || !parsed.num){\r\n                alert('problem with getting course number. please choose course again');\r\n                history.push(`${process.env.PUBLIC_URL}/`);\r\n                return;\r\n            }\r\n            if(!parsed.allcourses){\r\n                alert('problem getting type of courses preferences. looking only at active courses by default');\r\n                parsed.allcourses = 'false'\r\n            }\r\n            let tree_data = await fetchTree(parsed.num, parsed.allcourses);\r\n            if(!tree_data){\r\n                alert('problem with connecting to server. please try again later');\r\n                history.push(`${process.env.PUBLIC_URL}/`);\r\n                return;\r\n            }\r\n            if(!tree_data.children || tree_data.children.length === 0){\r\n                const url = `${ug_course_url}/${tree_data.number}`;\r\n                setCurrentCourse(tree_data.name);\r\n                setCurrentCourseUrl(url);\r\n                setEmptyTree(true);\r\n            }\r\n            let res = buildTree(tree_data, true);\r\n            setTreeData(res);\r\n            window.addEventListener('resize', centerTree);\r\n            setLoading(false);\r\n        }\r\n\r\n        onFirstRender();\r\n    }, [history]);\r\n\r\n}\r\n\r\nexport default CategoryTree;\r\n"]},"metadata":{},"sourceType":"module"}