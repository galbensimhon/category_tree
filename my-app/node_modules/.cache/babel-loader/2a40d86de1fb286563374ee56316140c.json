{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gal\\\\WebstormProjects\\\\CategoryTree\\\\my-react-app\\\\src\\\\components\\\\TreeContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { renameChild, getFatherPath, getOldNodePath } from '../utills/utills';\nimport { FILE, FOLDER } from \"../utills/constants\";\nimport { useHistory } from 'react-router-dom';\nimport Tree from \"./Tree\";\nimport queryString from 'query-string';\nimport { Button, Container, Typography } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Prompt } from 'react-router';\nimport { loadData, saveData } from \"../Api\";\nexport function TreeContainer() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [changeWithoutSaving, setChangeWithoutSaving] = useState(false);\n  const [allData, setAllData] = useState({});\n  const history = useHistory();\n\n  const getExposedRootName = () => {\n    let parsed = queryString.parse(window.location.search);\n\n    if (!parsed || !parsed.id) {\n      alert('problem with getting category tree..');\n      history.push(`${process.env.PUBLIC_URL}/`);\n      return null;\n    }\n\n    return parsed.id;\n  };\n\n  const [rootName, setRootName] = useState(getExposedRootName());\n\n  const getRootNodes = () => {\n    return _.filter(_.values(allData), node => {\n      return node.isRoot === true;\n    });\n  };\n\n  const newSearchClicked = () => {\n    history.push(`${process.env.PUBLIC_URL}/`);\n  };\n\n  const onSaveClicked = () => {\n    saveData(allData);\n    setChangeWithoutSaving(false);\n  };\n\n  const onRename = newName => {\n    if (newName) {\n      let [old_node, name] = getOldNodePath(newName);\n      if (old_node == null || name == null) return; // in case renaming the root\n\n      let new_node = `/${name}`;\n      let nodes_copy = JSON.parse(JSON.stringify(allData)) || {};\n\n      if (!nodes_copy[old_node].isRoot) {\n        let father_path = getFatherPath(newName);\n\n        if (father_path == null) {\n          return;\n        }\n\n        new_node = `${father_path}/${name}`;\n\n        if (new_node in allData) {\n          alert(`There is already a file with this name in folder,\\n Please insert different name!`);\n          return;\n        }\n\n        nodes_copy[father_path].children = nodes_copy[father_path].children.filter(item => item !== old_node);\n        nodes_copy[father_path].children.push(new_node);\n      } else {\n        // case renaming root name, and already have another root with the specific name\n        let root_nodes = getRootNodes();\n\n        if (root_nodes.includes(new_node)) {\n          alert(`There is already a different root with this name,\\n Please insert different name!`);\n          return;\n        }\n\n        setRootName(name);\n      }\n\n      renameChild(nodes_copy, old_node, new_node);\n      console.log(`Renaming ${old_node} to ${new_node}`);\n      setAllData(nodes_copy);\n      setChangeWithoutSaving(true);\n    }\n  };\n\n  const onDelete = file => {\n    let nodes_copy = JSON.parse(JSON.stringify(allData)) || {};\n    Delete(nodes_copy, file);\n    setAllData(nodes_copy);\n    console.log(`Deleting file ${file}`);\n    setChangeWithoutSaving(true);\n  };\n\n  const Delete = (nodes_copy, file) => {\n    if (file) {\n      if (nodes_copy[file].type === FOLDER) {\n        _.forEach(nodes_copy[file].children, child => {\n          Delete(nodes_copy, child);\n        });\n      }\n\n      if (!nodes_copy[file].isRoot) {\n        let father_path = getFatherPath(file);\n\n        if (father_path == null || allData[father_path].type === FILE) {\n          return;\n        }\n\n        nodes_copy[father_path].children = nodes_copy[father_path].children.filter(item => item !== file);\n      }\n\n      delete nodes_copy[file];\n    }\n  };\n\n  const onAdd = (newFile, is_file) => {\n    if (newFile) {\n      if ((allData != null || allData) && newFile in allData) {\n        alert(`There is already a file with this name in folder,\\n Please insert different name!`);\n        return;\n      }\n\n      let nodes_copy = JSON.parse(JSON.stringify(allData)) || {};\n      let father_path = getFatherPath(newFile);\n\n      if (father_path == null || allData[father_path].type === FILE) {\n        return;\n      }\n\n      nodes_copy[father_path].children.push(newFile);\n      nodes_copy[newFile] = is_file ? {\n        path: newFile,\n        type: FILE,\n        isOpen: false\n      } : {\n        path: newFile,\n        type: FOLDER,\n        isOpen: false,\n        children: []\n      };\n      console.log(`Adding ${is_file ? FILE : FOLDER} ${newFile}`);\n      setAllData(nodes_copy);\n      setChangeWithoutSaving(true);\n    }\n  };\n\n  useEffect(() => {\n    const onRender = async () => {\n      let res = await loadData();\n      setAllData(res);\n    };\n\n    onRender();\n  }, []);\n  useEffect(() => {\n    window.addEventListener('beforeunload', alertUser);\n    window.addEventListener('unload', handleEnd);\n    return () => {\n      window.removeEventListener('beforeunload', alertUser);\n      window.removeEventListener('unload', handleEnd);\n    };\n  }, []);\n\n  const alertUser = e => {\n    e.preventDefault();\n    e.returnValue = '';\n  };\n\n  const handleEnd = async () => {\n    await fetch({\n      url: setChangeWithoutSaving(false),\n      method: 'PUT'\n    });\n  };\n\n  const LoadingComponent = () => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    justify: 'center',\n    xs: 12,\n    style: {\n      minHeight: 200\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          justifyItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            marginBottom: '10px'\n          },\n          variant: \"h5\",\n          align: \"center\",\n          color: \"textPrimary\",\n          children: \"Loading tree...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n          style: {\n            margin: 'auto'\n          },\n          color: 'primary'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: changeWithoutSaving,\n      message: () => 'Are u sure to leave page?\\nChanges you made may not be saved.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: 'sm',\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: 'center',\n        xs: 12,\n        md: 12,\n        spacing: 0,\n        wrap: \"nowrap\",\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Go to select another tree!\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: newSearchClicked,\n            style: {\n              marginTop: '10px',\n              marginBottom: '10px',\n              marginRight: '5px'\n            },\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Change tree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Saving your changes..\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginTop: '10px',\n              marginBottom: '10px',\n              marginLeft: '5px'\n            },\n            onClick: onSaveClicked,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: 'xl',\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          marginBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: 'center',\n          children: loading ? /*#__PURE__*/_jsxDEV(LoadingComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              minHeight: 200,\n              marginTop: '15px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Tree, {\n              nodes: allData,\n              setNodes: setAllData,\n              onRename: onRename,\n              onDelete: onDelete,\n              onAdd: onAdd,\n              onLoading: setLoading,\n              rootName: rootName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TreeContainer, \"LDiqFSA6Oh0tE4kiqg9eFzQLSoU=\", false, function () {\n  return [useHistory];\n});\n\n_c = TreeContainer;\nexport default TreeContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeContainer\");","map":{"version":3,"sources":["C:/Users/Gal/WebstormProjects/CategoryTree/my-react-app/src/components/TreeContainer.js"],"names":["React","useEffect","useState","_","renameChild","getFatherPath","getOldNodePath","FILE","FOLDER","useHistory","Tree","queryString","Button","Container","Typography","Paper","Grid","Tooltip","CircularProgress","Prompt","loadData","saveData","TreeContainer","loading","setLoading","changeWithoutSaving","setChangeWithoutSaving","allData","setAllData","history","getExposedRootName","parsed","parse","window","location","search","id","alert","push","process","env","PUBLIC_URL","rootName","setRootName","getRootNodes","filter","values","node","isRoot","newSearchClicked","onSaveClicked","onRename","newName","old_node","name","new_node","nodes_copy","JSON","stringify","father_path","children","item","root_nodes","includes","console","log","onDelete","file","Delete","type","forEach","child","onAdd","newFile","is_file","path","isOpen","onRender","res","addEventListener","alertUser","handleEnd","removeEventListener","e","preventDefault","returnValue","fetch","url","method","LoadingComponent","minHeight","marginTop","display","flexDirection","justifyContent","justifyItems","marginBottom","margin","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {renameChild, getFatherPath, getOldNodePath} from '../utills/utills'\r\nimport {FILE, FOLDER} from \"../utills/constants\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport Tree from \"./Tree\";\r\nimport queryString from 'query-string'\r\nimport {Button, Container, Typography} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Prompt }  from 'react-router';\r\nimport {loadData, saveData} from \"../Api\";\r\n\r\nexport function TreeContainer() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [changeWithoutSaving, setChangeWithoutSaving] = useState(false);\r\n    const [allData, setAllData] = useState({});\r\n    const history = useHistory();\r\n\r\n    const getExposedRootName = () => {\r\n        let parsed = queryString.parse(window.location.search);\r\n        if(!parsed || !parsed.id){\r\n            alert('problem with getting category tree..');\r\n            history.push(`${process.env.PUBLIC_URL}/`);\r\n            return null;\r\n        }\r\n        return parsed.id;\r\n    }\r\n    const [rootName, setRootName] = useState(getExposedRootName());\r\n\r\n    const getRootNodes = () => {\r\n        return _.filter(_.values(allData), (node) => { return node.isRoot === true;});\r\n    }\r\n\r\n    const newSearchClicked = () => {\r\n        history.push(`${process.env.PUBLIC_URL}/`);\r\n    }\r\n    const onSaveClicked = () => {\r\n        saveData(allData);\r\n        setChangeWithoutSaving(false);\r\n    }\r\n\r\n    const onRename = (newName) => {\r\n        if(newName){\r\n            let [old_node, name] = getOldNodePath(newName);\r\n            if(old_node == null || name == null)\r\n                return;\r\n            // in case renaming the root\r\n            let new_node = `/${name}`;\r\n            let nodes_copy = JSON.parse(JSON.stringify(allData)) || {};\r\n            if(!nodes_copy[old_node].isRoot){\r\n                let father_path = getFatherPath(newName);\r\n                if(father_path == null){\r\n                    return;\r\n                }\r\n                new_node = `${father_path}/${name}`;\r\n                if (new_node in allData){\r\n                    alert(`There is already a file with this name in folder,\\n Please insert different name!`);\r\n                    return;\r\n                }\r\n                nodes_copy[father_path].children = nodes_copy[father_path].children.filter((item) => item !== old_node)\r\n                nodes_copy[father_path].children.push(new_node);\r\n            }\r\n            else{\r\n                // case renaming root name, and already have another root with the specific name\r\n                let root_nodes = getRootNodes();\r\n                if (root_nodes.includes(new_node)){\r\n                    alert(`There is already a different root with this name,\\n Please insert different name!`);\r\n                    return;\r\n                }\r\n                setRootName(name);\r\n\r\n            }\r\n            renameChild(nodes_copy, old_node, new_node);\r\n            console.log(`Renaming ${old_node} to ${new_node}`);\r\n            setAllData(nodes_copy);\r\n            setChangeWithoutSaving(true);\r\n        }\r\n    };\r\n    const onDelete = (file) => {\r\n        let nodes_copy = JSON.parse(JSON.stringify(allData)) || {};\r\n        Delete(nodes_copy, file);\r\n        setAllData(nodes_copy);\r\n        console.log(`Deleting file ${file}`);\r\n        setChangeWithoutSaving(true);\r\n    }\r\n    const Delete = (nodes_copy, file) => {\r\n        if(file){\r\n            if(nodes_copy[file].type === FOLDER){\r\n                _.forEach(nodes_copy[file].children, (child) => {\r\n                    Delete(nodes_copy, child);\r\n                });\r\n            }\r\n            if(!nodes_copy[file].isRoot){\r\n                let father_path = getFatherPath(file);\r\n                if(father_path == null || allData[father_path].type === FILE){\r\n                    return;\r\n                }\r\n                nodes_copy[father_path].children = nodes_copy[father_path].children.filter((item) => item !== file);\r\n            }\r\n            delete nodes_copy[file];\r\n        }\r\n    }\r\n    const onAdd = (newFile, is_file) => {\r\n        if(newFile){\r\n            if ((allData != null || allData) && newFile in allData){\r\n                alert(`There is already a file with this name in folder,\\n Please insert different name!`);\r\n                return;\r\n            }\r\n            let nodes_copy = JSON.parse(JSON.stringify(allData)) || {};\r\n            let father_path = getFatherPath(newFile);\r\n            if(father_path == null || allData[father_path].type === FILE){\r\n                return;\r\n            }\r\n            nodes_copy[father_path].children.push(newFile);\r\n\r\n            nodes_copy[newFile] = is_file ? {\r\n                path: newFile,\r\n                type: FILE,\r\n                isOpen: false\r\n            } : {\r\n                path: newFile,\r\n                type: FOLDER,\r\n                isOpen: false,\r\n                children: []\r\n            }\r\n            console.log(`Adding ${is_file ? FILE : FOLDER} ${newFile}`);\r\n            setAllData(nodes_copy);\r\n            setChangeWithoutSaving(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const onRender = async () => {\r\n            let res = await loadData();\r\n            setAllData(res);\r\n        }\r\n        onRender();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('beforeunload', alertUser);\r\n        window.addEventListener('unload', handleEnd);\r\n        return () => {\r\n            window.removeEventListener('beforeunload', alertUser);\r\n            window.removeEventListener('unload', handleEnd);\r\n        }\r\n    }, [])\r\n    const alertUser = e => {\r\n        e.preventDefault()\r\n        e.returnValue = ''\r\n    }\r\n    const handleEnd = async () => {\r\n        await fetch({\r\n            url: setChangeWithoutSaving(false),\r\n            method: 'PUT'\r\n        })\r\n    }\r\n\r\n    const LoadingComponent = () => (\r\n        <Grid item container  justify={'center'} xs={12} style={{minHeight: 200}} >\r\n            <Grid item xs={12} style={{marginTop: '10px'}}>\r\n                <div style={{display: 'flex', flexDirection:'column', justifyContent: 'center', justifyItems: 'center'}}>\r\n                    <Typography style={{marginBottom: '10px'}} variant=\"h5\" align=\"center\" color=\"textPrimary\" >\r\n                        Loading tree...\r\n                    </Typography>\r\n                    <CircularProgress style={{margin:'auto'}} color={'primary'}/>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n\r\n    return(\r\n        <div>\r\n            <Prompt\r\n                when={changeWithoutSaving}\r\n                message={() => 'Are u sure to leave page?\\nChanges you made may not be saved.'} />\r\n            <Container maxWidth={'sm'} >\r\n                <Grid item container justify={'center'} xs={12} md={12} spacing={0} wrap={\"nowrap\"}>\r\n                    <Tooltip title=\"Go to select another tree!\">\r\n                        <Button onClick={newSearchClicked} style={{marginTop: '10px', marginBottom: '10px', marginRight: '5px'}} variant=\"contained\" color=\"primary\">\r\n                            Change tree\r\n                        </Button>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Saving your changes..\">\r\n                        <Button style={{marginTop: '10px', marginBottom: '10px', marginLeft: '5px'}} onClick={onSaveClicked} variant=\"contained\" color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Container>\r\n            <Container maxWidth={'xl'}>\r\n                <Paper elevation={3} style={{marginBottom: '10px'}}>\r\n                    <Grid container justify={'center'}>\r\n                        {loading ? <LoadingComponent/> :\r\n                            <Grid item xs={12} style={{minHeight: 200, marginTop: '15px'}}>\r\n                                    <Tree\r\n                                        nodes={allData}\r\n                                        setNodes={setAllData}\r\n                                        onRename={onRename}\r\n                                        onDelete={onDelete}\r\n                                        onAdd={onAdd}\r\n                                        onLoading={setLoading}\r\n                                        rootName={rootName}\r\n                                    />\r\n                            </Grid>\r\n                        }\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TreeContainer;\r\n"]},"metadata":{},"sourceType":"module"}